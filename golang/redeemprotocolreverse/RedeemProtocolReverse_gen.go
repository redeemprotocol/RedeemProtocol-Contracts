// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package redeemprotocolreverse

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// RedeemProtocolTypeFee is an auto generated low-level Go binding around an user-defined struct.
type RedeemProtocolTypeFee struct {
	Amount *big.Int
	Token  common.Address
}

// RedeemprotocolreverseMetaData contains all meta data concerning the Redeemprotocolreverse contract.
var RedeemprotocolreverseMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverseOp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"structRedeemProtocolType.Fee\",\"name\":\"_updateFee\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"structRedeemProtocolType.Fee\",\"name\":\"_baseRedeemFee\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enumRedeemProtocolType.RedeemMethod\",\"name\":\"redeemMethod\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"customId\",\"type\":\"bytes32\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enumRedeemProtocolType.RedeemMethod\",\"name\":\"redeemMethod\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"Updated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseRedeemFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"grantOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enumRedeemProtocolType.RedeemMethod\",\"name\":\"_method\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_redeemAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenReceiver\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"isRedeemed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemMethod\",\"outputs\":[{\"internalType\":\"enumRedeemProtocolType.RedeemMethod\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_customId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"redeemWithBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_customId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"redeemWithMark\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_customId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"redeemWithTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setBaseRedeemFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setRedeemAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setUpdateFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enumRedeemProtocolType.RedeemMethod\",\"name\":\"_method\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_redeemAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"updateReverse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60a06040523480156200001157600080fd5b5060405162004b6c38038062004b6c833981810160405281019062000037919062000697565b82600180819055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506000600260006101000a81548160ff02191690831515021790555033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001027fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42856200027060201b60201c565b620001347f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c856200027060201b60201c565b620001667fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42806200036160201b60201c565b620001b87f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec426200036160201b60201c565b8160036000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508060056000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050505062000709565b620002828282620003c460201b60201c565b6200035d57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620003026200042e60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600062000374836200044a60201b60201c565b905081600080858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000620004456200046960201b62002a881760201c565b905090565b6000806000838152602001908152602001600020600101549050919050565b60006200047c33620004b360201b60201c565b156200049257601436033560601c9050620004af565b620004a7620004ed60201b62002aba1760201c565b9050620004b0565b5b90565b600060805173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600033905090565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005318262000504565b9050919050565b620005438162000524565b81146200054f57600080fd5b50565b600081519050620005638162000538565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005b9826200056e565b810181811067ffffffffffffffff82111715620005db57620005da6200057f565b5b80604052505050565b6000620005f0620004f5565b9050620005fe8282620005ae565b919050565b6000819050919050565b620006188162000603565b81146200062457600080fd5b50565b60008151905062000638816200060d565b92915050565b60006040828403121562000657576200065662000569565b5b620006636040620005e4565b90506000620006758482850162000627565b60008301525060206200068b8482850162000552565b60208301525092915050565b60008060008060c08587031215620006b457620006b3620004ff565b5b6000620006c48782880162000552565b9450506020620006d78782880162000552565b9350506040620006ea878288016200063e565b9250506080620006fd878288016200063e565b91505092959194509250565b608051614447620007256000396000610fc301526144476000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638456cb5911610104578063a3fe6fcb116100a2578063e348da1311610071578063e348da13146104f8578063ef573bba14610514578063f273e32314610530578063f6be3c2c1461054c576101cf565b8063a3fe6fcb14610481578063c1e3d26b1461049f578063c45a0155146104be578063d547741f146104dc576101cf565b8063983d2737116100de578063983d27371461040b57806398f7f55e14610429578063a217fddf14610445578063a3e295bc14610463576101cf565b80638456cb59146103a1578063892830f4146103ab57806391d14854146103db576101cf565b806345d335e3116101715780635c975abb1161014b5780635c975abb1461032c57806361e41e281461034a57806369328dec14610366578063758cdcf014610382576101cf565b806345d335e3146102c4578063572b6c05146102e057806358f2c09714610310576101cf565b80632a0acc6a116101ad5780632a0acc6a146102525780632f2ff15d1461027057806335ad36cf1461028c57806336568abe146102a8576101cf565b806301ffc9a7146101d45780630373c90914610204578063248a9ca314610222575b600080fd5b6101ee60048036038101906101e991906131c1565b610568565b6040516101fb9190613209565b60405180910390f35b61020c6105e2565b604051610219919061323d565b60405180910390f35b61023c6004803603810190610237919061328e565b6105e8565b60405161024991906132ca565b60405180910390f35b61025a610607565b60405161026791906132ca565b60405180910390f35b61028a60048036038101906102859190613343565b61062b565b005b6102a660048036038101906102a191906133e8565b61064c565b005b6102c260048036038101906102bd9190613343565b610dd9565b005b6102de60048036038101906102d9919061348a565b610e5c565b005b6102fa60048036038101906102f591906134ca565b610fbf565b6040516103079190613209565b60405180910390f35b61032a6004803603810190610325919061351c565b611017565b005b61033461140f565b6040516103419190613209565b60405180910390f35b610364600480360381019061035f91906135be565b611426565b005b610380600480360381019061037b91906135eb565b611508565b005b61038a611657565b60405161039892919061364d565b60405180910390f35b6103a9611689565b005b6103c560048036038101906103c09190613676565b611723565b6040516103d29190613209565b60405180910390f35b6103f560048036038101906103f09190613343565b61175f565b6040516104029190613209565b60405180910390f35b6104136117c9565b60405161042091906132ca565b60405180910390f35b610443600480360381019061043e91906136c9565b6117ed565b005b61044d6118dd565b60405161045a91906132ca565b60405180910390f35b61046b6118e4565b604051610478919061371c565b60405180910390f35b61048961190a565b60405161049691906137ae565b60405180910390f35b6104a761191d565b6040516104b592919061364d565b60405180910390f35b6104c661194f565b6040516104d3919061371c565b60405180910390f35b6104f660048036038101906104f19190613343565b611975565b005b610512600480360381019061050d91906134ca565b611996565b005b61052e6004803603810190610529919061348a565b6119f6565b005b61054a600480360381019061054591906133e8565b611b47565b005b610566600480360381019061056191906133e8565b6122a5565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105db57506105da82612ac2565b5b9050919050565b60075481565b6000806000838152602001908152602001600020600101549050919050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b610634826105e8565b61063d81612b2c565b6106478383612b40565b505050565b610654612c20565b600060f81b8560006020811061066d5761066c6137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036106bc577f44454641554c545f435553544f4d5f494400000000000000000000000000000094505b8673ffffffffffffffffffffffffffffffffffffffff166301ffc9a76380ac58cd60e01b6040518263ffffffff1660e01b81526004016106fc9190613807565b602060405180830381865afa158015610719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073d919061384e565b61077c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610773906138d8565b60405180910390fd5b600160028111156107905761078f613737565b5b600860009054906101000a900460ff1660028111156107b2576107b1613737565b5b146107f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e990613944565b60405180910390fd5b600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600086815260200190815260200160002060009054906101000a900460ff16156108a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610898906139b0565b60405180910390fd5b6001600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff02191690831515021790555060008414158015610930575060008360ff1614155b80156109795750600060f81b826000602081106109505761094f6137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b80156109c25750600060f81b81600060208110610999576109986137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b15610a6657600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf3330600754888888886040518863ffffffff1660e01b8152600401610a3397969594939291906139df565b600060405180830381600087803b158015610a4d57600080fd5b505af1158015610a61573d6000803e3d6000fd5b505050505b6000600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306007546040518463ffffffff1660e01b8152600401610acc93929190613a4e565b6020604051808303816000875af1158015610aeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0f919061384e565b905080610b51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4890613ad1565b60405180910390fd5b600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3f006746040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c239190613b06565b6005600001546040518363ffffffff1660e01b8152600401610c46929190613b33565b6020604051808303816000875af1158015610c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c89919061384e565b905080610ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc290613ba8565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff166342842e0e610cef612c6a565b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a6040518463ffffffff1660e01b8152600401610d3193929190613a4e565b600060405180830381600087803b158015610d4b57600080fd5b505af1158015610d5f573d6000803e3d6000fd5b5050505060016002811115610d7757610d76613737565b5b878973ffffffffffffffffffffffffffffffffffffffff167f6a694edf7fb728c1b38ab129b298edb240d668a775d77af8305d1b1b6923d1ba610db8612c6a565b8a604051610dc7929190613bc8565b60405180910390a45050505050505050565b610de1612c6a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4590613c63565b60405180910390fd5b610e588282612c79565b5050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610eec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee390613ccf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5290613d3b565b60405180910390fd5b8160056000018190555080600560010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600754821115610fbb57816007819055505b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c61104181612b2c565b611049612c20565b6001600281111561105d5761105c613737565b5b8860028111156110705761106f613737565b5b036110e557600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036110e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110db90613da7565b60405180910390fd5b5b60056000015487101561112d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112490613e39565b60405180910390fd5b611138888888612d5a565b6000851415801561114d575060008460ff1614155b80156111965750600060f81b8360006020811061116d5761116c6137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b80156111df5750600060f81b826000602081106111b6576111b56137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b1561128657600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf3330600360000154898989896040518863ffffffff1660e01b815260040161125397969594939291906139df565b600060405180830381600087803b15801561126d57600080fd5b505af1158015611281573d6000803e3d6000fd5b505050505b6000600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3f006746040518163ffffffff1660e01b8152600401602060405180830381865afa158015611337573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135b9190613b06565b6003600001546040518463ffffffff1660e01b815260040161137f93929190613a4e565b6020604051808303816000875af115801561139e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c2919061384e565b905080611404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113fb90613ad1565b60405180910390fd5b505050505050505050565b6000600260009054906101000a900460ff16905090565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ad90613ccf565b60405180910390fd5b6005600001548110156114fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f590613e39565b60405180910390fd5b8060078190555050565b60026001540361154d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154490613ea5565b60405180910390fd5b60026001819055507fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4261157f81612b2c565b611587612c20565b60008473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b81526004016115c4929190613b33565b6020604051808303816000875af11580156115e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611607919061384e565b905080611649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164090613f11565b60405180910390fd5b505060018081905550505050565b60038060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171090613ccf565b60405180910390fd5b611721612e28565b565b6009602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c81565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461187d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187490613ccf565b60405180910390fd5b611885612c20565b6005600001548210156118cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c490613e39565b60405180910390fd5b6118d8838383612d5a565b505050565b6000801b81565b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900460ff1681565b60058060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61197e826105e8565b61198781612b2c565b6119918383612c79565b505050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec426119c081612b2c565b6119c8612c20565b6119f27f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c8361062b565b5050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7d90613ccf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611af5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aec90613d3b565b60405180910390fd5b8160036000018190555080600360010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b611b4f612c20565b600060f81b85600060208110611b6857611b676137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603611bb7577f44454641554c545f435553544f4d5f494400000000000000000000000000000094505b8673ffffffffffffffffffffffffffffffffffffffff166301ffc9a76380ac58cd60e01b6040518263ffffffff1660e01b8152600401611bf79190613807565b602060405180830381865afa158015611c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c38919061384e565b611c77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6e906138d8565b60405180910390fd5b600280811115611c8a57611c89613737565b5b600860009054906101000a900460ff166002811115611cac57611cab613737565b5b14611cec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ce390613f7d565b60405180910390fd5b600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600086815260200190815260200160002060009054906101000a900460ff1615611d9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d92906139b0565b60405180910390fd5b6001600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff02191690831515021790555060008414158015611e2a575060008360ff1614155b8015611e735750600060f81b82600060208110611e4a57611e496137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b8015611ebc5750600060f81b81600060208110611e9357611e926137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b15611f6057600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf3330600754888888886040518863ffffffff1660e01b8152600401611f2d97969594939291906139df565b600060405180830381600087803b158015611f4757600080fd5b505af1158015611f5b573d6000803e3d6000fd5b505050505b6000600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306007546040518463ffffffff1660e01b8152600401611fc693929190613a4e565b6020604051808303816000875af1158015611fe5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612009919061384e565b90508061204b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204290613ad1565b60405180910390fd5b600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3f006746040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061211d9190613b06565b6005600001546040518363ffffffff1660e01b8152600401612140929190613b33565b6020604051808303816000875af115801561215f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612183919061384e565b9050806121c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121bc90613ba8565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff166342966c68886040518263ffffffff1660e01b81526004016121fe919061323d565b600060405180830381600087803b15801561221857600080fd5b505af115801561222c573d6000803e3d6000fd5b5050505060028081111561224357612242613737565b5b878973ffffffffffffffffffffffffffffffffffffffff167f6a694edf7fb728c1b38ab129b298edb240d668a775d77af8305d1b1b6923d1ba612284612c6a565b8a604051612293929190613bc8565b60405180910390a45050505050505050565b6122ad612c20565b600060f81b856000602081106122c6576122c56137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603612315577f44454641554c545f435553544f4d5f494400000000000000000000000000000094505b8673ffffffffffffffffffffffffffffffffffffffff166301ffc9a76380ac58cd60e01b6040518263ffffffff1660e01b81526004016123559190613807565b602060405180830381865afa158015612372573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612396919061384e565b6123d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123cc906138d8565b60405180910390fd5b600060028111156123e9576123e8613737565b5b600860009054906101000a900460ff16600281111561240b5761240a613737565b5b1461244b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161244290613fe9565b60405180910390fd5b600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600086815260200190815260200160002060009054906101000a900460ff16156124fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124f1906139b0565b60405180910390fd5b612502612c6a565b73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16636352211e886040518263ffffffff1660e01b8152600401612551919061323d565b602060405180830381865afa15801561256e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125929190613b06565b73ffffffffffffffffffffffffffffffffffffffff16146125e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125df90614055565b60405180910390fd5b6001600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff02191690831515021790555060008414158015612677575060008360ff1614155b80156126c05750600060f81b82600060208110612697576126966137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b80156127095750600060f81b816000602081106126e0576126df6137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b156127ad57600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf3330600754888888886040518863ffffffff1660e01b815260040161277a97969594939291906139df565b600060405180830381600087803b15801561279457600080fd5b505af11580156127a8573d6000803e3d6000fd5b505050505b6000600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306007546040518463ffffffff1660e01b815260040161281393929190613a4e565b6020604051808303816000875af1158015612832573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612856919061384e565b905080612898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161288f90613ad1565b60405180910390fd5b600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3f006746040518163ffffffff1660e01b8152600401602060405180830381865afa158015612946573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061296a9190613b06565b6005600001546040518363ffffffff1660e01b815260040161298d929190613b33565b6020604051808303816000875af11580156129ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129d0919061384e565b905080612a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a0990613ba8565b60405180910390fd5b60006002811115612a2657612a25613737565b5b878973ffffffffffffffffffffffffffffffffffffffff167f6a694edf7fb728c1b38ab129b298edb240d668a775d77af8305d1b1b6923d1ba612a67612c6a565b8a604051612a76929190613bc8565b60405180910390a45050505050505050565b6000612a9333610fbf565b15612aa757601436033560601c9050612ab6565b612aaf612aba565b9050612ab7565b5b90565b600033905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b612b3d81612b38612c6a565b612e8b565b50565b612b4a828261175f565b612c1c57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612bc1612c6a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b612c2861140f565b15612c68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c5f906140c1565b60405180910390fd5b565b6000612c74612a88565b905090565b612c83828261175f565b15612d5657600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612cfb612c6a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b82600860006101000a81548160ff02191690836002811115612d7f57612d7e613737565b5b02179055508160078190555080600860016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16836002811115612df657612df5613737565b5b837f79a6ccfd52698aa33bd8cc221b2a5121a21ff610b21e3ca09051eaba3d9d269460405160405180910390a4505050565b612e30612c20565b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612e74612c6a565b604051612e81919061371c565b60405180910390a1565b612e95828261175f565b612f2457612eba8173ffffffffffffffffffffffffffffffffffffffff166014612f28565b612ec88360001c6020612f28565b604051602001612ed99291906141ea565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f1b919061426e565b60405180910390fd5b5050565b606060006002836002612f3b91906142bf565b612f459190614319565b67ffffffffffffffff811115612f5e57612f5d61434d565b5b6040519080825280601f01601f191660200182016040528015612f905781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612fc857612fc76137c9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061302c5761302b6137c9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261306c91906142bf565b6130769190614319565b90505b6001811115613116577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106130b8576130b76137c9565b5b1a60f81b8282815181106130cf576130ce6137c9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061310f9061437c565b9050613079565b506000841461315a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613151906143f1565b60405180910390fd5b8091505092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61319e81613169565b81146131a957600080fd5b50565b6000813590506131bb81613195565b92915050565b6000602082840312156131d7576131d6613164565b5b60006131e5848285016131ac565b91505092915050565b60008115159050919050565b613203816131ee565b82525050565b600060208201905061321e60008301846131fa565b92915050565b6000819050919050565b61323781613224565b82525050565b6000602082019050613252600083018461322e565b92915050565b6000819050919050565b61326b81613258565b811461327657600080fd5b50565b60008135905061328881613262565b92915050565b6000602082840312156132a4576132a3613164565b5b60006132b284828501613279565b91505092915050565b6132c481613258565b82525050565b60006020820190506132df60008301846132bb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613310826132e5565b9050919050565b61332081613305565b811461332b57600080fd5b50565b60008135905061333d81613317565b92915050565b6000806040838503121561335a57613359613164565b5b600061336885828601613279565b92505060206133798582860161332e565b9150509250929050565b61338c81613224565b811461339757600080fd5b50565b6000813590506133a981613383565b92915050565b600060ff82169050919050565b6133c5816133af565b81146133d057600080fd5b50565b6000813590506133e2816133bc565b92915050565b600080600080600080600060e0888a03121561340757613406613164565b5b60006134158a828b0161332e565b97505060206134268a828b0161339a565b96505060406134378a828b01613279565b95505060606134488a828b0161339a565b94505060806134598a828b016133d3565b93505060a061346a8a828b01613279565b92505060c061347b8a828b01613279565b91505092959891949750929550565b600080604083850312156134a1576134a0613164565b5b60006134af8582860161339a565b92505060206134c08582860161332e565b9150509250929050565b6000602082840312156134e0576134df613164565b5b60006134ee8482850161332e565b91505092915050565b6003811061350457600080fd5b50565b600081359050613516816134f7565b92915050565b600080600080600080600060e0888a03121561353b5761353a613164565b5b60006135498a828b01613507565b975050602061355a8a828b0161339a565b965050604061356b8a828b0161332e565b955050606061357c8a828b0161339a565b945050608061358d8a828b016133d3565b93505060a061359e8a828b01613279565b92505060c06135af8a828b01613279565b91505092959891949750929550565b6000602082840312156135d4576135d3613164565b5b60006135e28482850161339a565b91505092915050565b60008060006060848603121561360457613603613164565b5b60006136128682870161332e565b93505060206136238682870161339a565b92505060406136348682870161332e565b9150509250925092565b61364781613305565b82525050565b6000604082019050613662600083018561322e565b61366f602083018461363e565b9392505050565b60008060006060848603121561368f5761368e613164565b5b600061369d8682870161332e565b93505060206136ae8682870161339a565b92505060406136bf86828701613279565b9150509250925092565b6000806000606084860312156136e2576136e1613164565b5b60006136f086828701613507565b93505060206137018682870161339a565b92505060406137128682870161332e565b9150509250925092565b6000602082019050613731600083018461363e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061377757613776613737565b5b50565b600081905061378882613766565b919050565b60006137988261377a565b9050919050565b6137a88161378d565b82525050565b60006020820190506137c3600083018461379f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61380181613169565b82525050565b600060208201905061381c60008301846137f8565b92915050565b61382b816131ee565b811461383657600080fd5b50565b60008151905061384881613822565b92915050565b60006020828403121561386457613863613164565b5b600061387284828501613839565b91505092915050565b600082825260208201905092915050565b7f6e6f742045524337323120746f6b656e00000000000000000000000000000000600082015250565b60006138c260108361387b565b91506138cd8261388c565b602082019050919050565b600060208201905081810360008301526138f1816138b5565b9050919050565b7f6d6574686f64206973206e6f74207472616e7366657200000000000000000000600082015250565b600061392e60168361387b565b9150613939826138f8565b602082019050919050565b6000602082019050818103600083015261395d81613921565b9050919050565b7f746f6b656e20686173206265656e2072656465656d6564000000000000000000600082015250565b600061399a60178361387b565b91506139a582613964565b602082019050919050565b600060208201905081810360008301526139c98161398d565b9050919050565b6139d9816133af565b82525050565b600060e0820190506139f4600083018a61363e565b613a01602083018961363e565b613a0e604083018861322e565b613a1b606083018761322e565b613a2860808301866139d0565b613a3560a08301856132bb565b613a4260c08301846132bb565b98975050505050505050565b6000606082019050613a63600083018661363e565b613a70602083018561363e565b613a7d604083018461322e565b949350505050565b7f666565207061796d656e74206661696c65640000000000000000000000000000600082015250565b6000613abb60128361387b565b9150613ac682613a85565b602082019050919050565b60006020820190508181036000830152613aea81613aae565b9050919050565b600081519050613b0081613317565b92915050565b600060208284031215613b1c57613b1b613164565b5b6000613b2a84828501613af1565b91505092915050565b6000604082019050613b48600083018561363e565b613b55602083018461322e565b9392505050565b7f626173652072656465656d20666565207061796d656e74206661696c65640000600082015250565b6000613b92601e8361387b565b9150613b9d82613b5c565b602082019050919050565b60006020820190508181036000830152613bc181613b85565b9050919050565b6000604082019050613bdd600083018561363e565b613bea60208301846132bb565b9392505050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000613c4d602f8361387b565b9150613c5882613bf1565b604082019050919050565b60006020820190508181036000830152613c7c81613c40565b9050919050565b7f6f6e6c7920666163746f72790000000000000000000000000000000000000000600082015250565b6000613cb9600c8361387b565b9150613cc482613c83565b602082019050919050565b60006020820190508181036000830152613ce881613cac565b9050919050565b7f696e76616c696420746f6b656e00000000000000000000000000000000000000600082015250565b6000613d25600d8361387b565b9150613d3082613cef565b602082019050919050565b60006020820190508181036000830152613d5481613d18565b9050919050565b7f746f6b656e5265636569766572206d7573742062652073657400000000000000600082015250565b6000613d9160198361387b565b9150613d9c82613d5b565b602082019050919050565b60006020820190508181036000830152613dc081613d84565b9050919050565b7f72656465656d416d6f756e74206d75737420626520677265617465722074686160008201527f6e206261736552656465656d4665650000000000000000000000000000000000602082015250565b6000613e23602f8361387b565b9150613e2e82613dc7565b604082019050919050565b60006020820190508181036000830152613e5281613e16565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613e8f601f8361387b565b9150613e9a82613e59565b602082019050919050565b60006020820190508181036000830152613ebe81613e82565b9050919050565b7f7769746864726177206661696c65640000000000000000000000000000000000600082015250565b6000613efb600f8361387b565b9150613f0682613ec5565b602082019050919050565b60006020820190508181036000830152613f2a81613eee565b9050919050565b7f6d6574686f64206973206e6f74206275726e0000000000000000000000000000600082015250565b6000613f6760128361387b565b9150613f7282613f31565b602082019050919050565b60006020820190508181036000830152613f9681613f5a565b9050919050565b7f6d6574686f64206973206e6f74206d61726b0000000000000000000000000000600082015250565b6000613fd360128361387b565b9150613fde82613f9d565b602082019050919050565b6000602082019050818103600083015261400281613fc6565b9050919050565b7f6e6f7420746f6b656e206f776e65720000000000000000000000000000000000600082015250565b600061403f600f8361387b565b915061404a82614009565b602082019050919050565b6000602082019050818103600083015261406e81614032565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006140ab60108361387b565b91506140b682614075565b602082019050919050565b600060208201905081810360008301526140da8161409e565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006141226017836140e1565b915061412d826140ec565b601782019050919050565b600081519050919050565b60005b83811015614161578082015181840152602081019050614146565b60008484015250505050565b600061417882614138565b61418281856140e1565b9350614192818560208601614143565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006141d46011836140e1565b91506141df8261419e565b601182019050919050565b60006141f582614115565b9150614201828561416d565b915061420c826141c7565b9150614218828461416d565b91508190509392505050565b6000601f19601f8301169050919050565b600061424082614138565b61424a818561387b565b935061425a818560208601614143565b61426381614224565b840191505092915050565b600060208201905081810360008301526142888184614235565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006142ca82613224565b91506142d583613224565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561430e5761430d614290565b5b828202905092915050565b600061432482613224565b915061432f83613224565b925082820190508082111561434757614346614290565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061438782613224565b91506000820361439a57614399614290565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006143db60208361387b565b91506143e6826143a5565b602082019050919050565b6000602082019050818103600083015261440a816143ce565b905091905056fea2646970667358221220672126a840d807e5f361ad7c4a2f6075f995f725a0113c0c633b8fdd5015e8ae64736f6c63430008100033",
}

// RedeemprotocolreverseABI is the input ABI used to generate the binding from.
// Deprecated: Use RedeemprotocolreverseMetaData.ABI instead.
var RedeemprotocolreverseABI = RedeemprotocolreverseMetaData.ABI

// RedeemprotocolreverseBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use RedeemprotocolreverseMetaData.Bin instead.
var RedeemprotocolreverseBin = RedeemprotocolreverseMetaData.Bin

// DeployRedeemprotocolreverse deploys a new Ethereum contract, binding an instance of Redeemprotocolreverse to it.
func DeployRedeemprotocolreverse(auth *bind.TransactOpts, backend bind.ContractBackend, reverseOp common.Address, forwarder common.Address, _updateFee RedeemProtocolTypeFee, _baseRedeemFee RedeemProtocolTypeFee) (common.Address, *types.Transaction, *Redeemprotocolreverse, error) {
	parsed, err := RedeemprotocolreverseMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(RedeemprotocolreverseBin), backend, reverseOp, forwarder, _updateFee, _baseRedeemFee)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Redeemprotocolreverse{RedeemprotocolreverseCaller: RedeemprotocolreverseCaller{contract: contract}, RedeemprotocolreverseTransactor: RedeemprotocolreverseTransactor{contract: contract}, RedeemprotocolreverseFilterer: RedeemprotocolreverseFilterer{contract: contract}}, nil
}

// Redeemprotocolreverse is an auto generated Go binding around an Ethereum contract.
type Redeemprotocolreverse struct {
	RedeemprotocolreverseCaller     // Read-only binding to the contract
	RedeemprotocolreverseTransactor // Write-only binding to the contract
	RedeemprotocolreverseFilterer   // Log filterer for contract events
}

// RedeemprotocolreverseCaller is an auto generated read-only Go binding around an Ethereum contract.
type RedeemprotocolreverseCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RedeemprotocolreverseTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RedeemprotocolreverseTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RedeemprotocolreverseFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RedeemprotocolreverseFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RedeemprotocolreverseSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RedeemprotocolreverseSession struct {
	Contract     *Redeemprotocolreverse // Generic contract binding to set the session for
	CallOpts     bind.CallOpts          // Call options to use throughout this session
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// RedeemprotocolreverseCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RedeemprotocolreverseCallerSession struct {
	Contract *RedeemprotocolreverseCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                // Call options to use throughout this session
}

// RedeemprotocolreverseTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RedeemprotocolreverseTransactorSession struct {
	Contract     *RedeemprotocolreverseTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                // Transaction auth options to use throughout this session
}

// RedeemprotocolreverseRaw is an auto generated low-level Go binding around an Ethereum contract.
type RedeemprotocolreverseRaw struct {
	Contract *Redeemprotocolreverse // Generic contract binding to access the raw methods on
}

// RedeemprotocolreverseCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RedeemprotocolreverseCallerRaw struct {
	Contract *RedeemprotocolreverseCaller // Generic read-only contract binding to access the raw methods on
}

// RedeemprotocolreverseTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RedeemprotocolreverseTransactorRaw struct {
	Contract *RedeemprotocolreverseTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRedeemprotocolreverse creates a new instance of Redeemprotocolreverse, bound to a specific deployed contract.
func NewRedeemprotocolreverse(address common.Address, backend bind.ContractBackend) (*Redeemprotocolreverse, error) {
	contract, err := bindRedeemprotocolreverse(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Redeemprotocolreverse{RedeemprotocolreverseCaller: RedeemprotocolreverseCaller{contract: contract}, RedeemprotocolreverseTransactor: RedeemprotocolreverseTransactor{contract: contract}, RedeemprotocolreverseFilterer: RedeemprotocolreverseFilterer{contract: contract}}, nil
}

// NewRedeemprotocolreverseCaller creates a new read-only instance of Redeemprotocolreverse, bound to a specific deployed contract.
func NewRedeemprotocolreverseCaller(address common.Address, caller bind.ContractCaller) (*RedeemprotocolreverseCaller, error) {
	contract, err := bindRedeemprotocolreverse(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolreverseCaller{contract: contract}, nil
}

// NewRedeemprotocolreverseTransactor creates a new write-only instance of Redeemprotocolreverse, bound to a specific deployed contract.
func NewRedeemprotocolreverseTransactor(address common.Address, transactor bind.ContractTransactor) (*RedeemprotocolreverseTransactor, error) {
	contract, err := bindRedeemprotocolreverse(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolreverseTransactor{contract: contract}, nil
}

// NewRedeemprotocolreverseFilterer creates a new log filterer instance of Redeemprotocolreverse, bound to a specific deployed contract.
func NewRedeemprotocolreverseFilterer(address common.Address, filterer bind.ContractFilterer) (*RedeemprotocolreverseFilterer, error) {
	contract, err := bindRedeemprotocolreverse(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolreverseFilterer{contract: contract}, nil
}

// bindRedeemprotocolreverse binds a generic wrapper to an already deployed contract.
func bindRedeemprotocolreverse(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RedeemprotocolreverseABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Redeemprotocolreverse *RedeemprotocolreverseRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Redeemprotocolreverse.Contract.RedeemprotocolreverseCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Redeemprotocolreverse *RedeemprotocolreverseRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.RedeemprotocolreverseTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Redeemprotocolreverse *RedeemprotocolreverseRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.RedeemprotocolreverseTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Redeemprotocolreverse.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.contract.Transact(opts, method, params...)
}

// ADMIN is a free data retrieval call binding the contract method 0x2a0acc6a.
//
// Solidity: function ADMIN() view returns(bytes32)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) ADMIN(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "ADMIN")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ADMIN is a free data retrieval call binding the contract method 0x2a0acc6a.
//
// Solidity: function ADMIN() view returns(bytes32)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) ADMIN() ([32]byte, error) {
	return _Redeemprotocolreverse.Contract.ADMIN(&_Redeemprotocolreverse.CallOpts)
}

// ADMIN is a free data retrieval call binding the contract method 0x2a0acc6a.
//
// Solidity: function ADMIN() view returns(bytes32)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) ADMIN() ([32]byte, error) {
	return _Redeemprotocolreverse.Contract.ADMIN(&_Redeemprotocolreverse.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) DEFAULTADMINROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "DEFAULT_ADMIN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _Redeemprotocolreverse.Contract.DEFAULTADMINROLE(&_Redeemprotocolreverse.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _Redeemprotocolreverse.Contract.DEFAULTADMINROLE(&_Redeemprotocolreverse.CallOpts)
}

// OPERATOR is a free data retrieval call binding the contract method 0x983d2737.
//
// Solidity: function OPERATOR() view returns(bytes32)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) OPERATOR(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "OPERATOR")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// OPERATOR is a free data retrieval call binding the contract method 0x983d2737.
//
// Solidity: function OPERATOR() view returns(bytes32)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) OPERATOR() ([32]byte, error) {
	return _Redeemprotocolreverse.Contract.OPERATOR(&_Redeemprotocolreverse.CallOpts)
}

// OPERATOR is a free data retrieval call binding the contract method 0x983d2737.
//
// Solidity: function OPERATOR() view returns(bytes32)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) OPERATOR() ([32]byte, error) {
	return _Redeemprotocolreverse.Contract.OPERATOR(&_Redeemprotocolreverse.CallOpts)
}

// BaseRedeemFee is a free data retrieval call binding the contract method 0xc1e3d26b.
//
// Solidity: function baseRedeemFee() view returns(uint256 amount, address token)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) BaseRedeemFee(opts *bind.CallOpts) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "baseRedeemFee")

	outstruct := new(struct {
		Amount *big.Int
		Token  common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Token = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// BaseRedeemFee is a free data retrieval call binding the contract method 0xc1e3d26b.
//
// Solidity: function baseRedeemFee() view returns(uint256 amount, address token)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) BaseRedeemFee() (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolreverse.Contract.BaseRedeemFee(&_Redeemprotocolreverse.CallOpts)
}

// BaseRedeemFee is a free data retrieval call binding the contract method 0xc1e3d26b.
//
// Solidity: function baseRedeemFee() view returns(uint256 amount, address token)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) BaseRedeemFee() (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolreverse.Contract.BaseRedeemFee(&_Redeemprotocolreverse.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) Factory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "factory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) Factory() (common.Address, error) {
	return _Redeemprotocolreverse.Contract.Factory(&_Redeemprotocolreverse.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) Factory() (common.Address, error) {
	return _Redeemprotocolreverse.Contract.Factory(&_Redeemprotocolreverse.CallOpts)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) GetRoleAdmin(opts *bind.CallOpts, role [32]byte) ([32]byte, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "getRoleAdmin", role)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _Redeemprotocolreverse.Contract.GetRoleAdmin(&_Redeemprotocolreverse.CallOpts, role)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _Redeemprotocolreverse.Contract.GetRoleAdmin(&_Redeemprotocolreverse.CallOpts, role)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) HasRole(opts *bind.CallOpts, role [32]byte, account common.Address) (bool, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "hasRole", role, account)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _Redeemprotocolreverse.Contract.HasRole(&_Redeemprotocolreverse.CallOpts, role, account)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _Redeemprotocolreverse.Contract.HasRole(&_Redeemprotocolreverse.CallOpts, role, account)
}

// IsRedeemed is a free data retrieval call binding the contract method 0x892830f4.
//
// Solidity: function isRedeemed(address , uint256 , bytes32 ) view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) IsRedeemed(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int, arg2 [32]byte) (bool, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "isRedeemed", arg0, arg1, arg2)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsRedeemed is a free data retrieval call binding the contract method 0x892830f4.
//
// Solidity: function isRedeemed(address , uint256 , bytes32 ) view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) IsRedeemed(arg0 common.Address, arg1 *big.Int, arg2 [32]byte) (bool, error) {
	return _Redeemprotocolreverse.Contract.IsRedeemed(&_Redeemprotocolreverse.CallOpts, arg0, arg1, arg2)
}

// IsRedeemed is a free data retrieval call binding the contract method 0x892830f4.
//
// Solidity: function isRedeemed(address , uint256 , bytes32 ) view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) IsRedeemed(arg0 common.Address, arg1 *big.Int, arg2 [32]byte) (bool, error) {
	return _Redeemprotocolreverse.Contract.IsRedeemed(&_Redeemprotocolreverse.CallOpts, arg0, arg1, arg2)
}

// IsTrustedForwarder is a free data retrieval call binding the contract method 0x572b6c05.
//
// Solidity: function isTrustedForwarder(address forwarder) view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) IsTrustedForwarder(opts *bind.CallOpts, forwarder common.Address) (bool, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "isTrustedForwarder", forwarder)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsTrustedForwarder is a free data retrieval call binding the contract method 0x572b6c05.
//
// Solidity: function isTrustedForwarder(address forwarder) view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) IsTrustedForwarder(forwarder common.Address) (bool, error) {
	return _Redeemprotocolreverse.Contract.IsTrustedForwarder(&_Redeemprotocolreverse.CallOpts, forwarder)
}

// IsTrustedForwarder is a free data retrieval call binding the contract method 0x572b6c05.
//
// Solidity: function isTrustedForwarder(address forwarder) view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) IsTrustedForwarder(forwarder common.Address) (bool, error) {
	return _Redeemprotocolreverse.Contract.IsTrustedForwarder(&_Redeemprotocolreverse.CallOpts, forwarder)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) Paused(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "paused")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) Paused() (bool, error) {
	return _Redeemprotocolreverse.Contract.Paused(&_Redeemprotocolreverse.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) Paused() (bool, error) {
	return _Redeemprotocolreverse.Contract.Paused(&_Redeemprotocolreverse.CallOpts)
}

// RedeemAmount is a free data retrieval call binding the contract method 0x0373c909.
//
// Solidity: function redeemAmount() view returns(uint256)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) RedeemAmount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "redeemAmount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RedeemAmount is a free data retrieval call binding the contract method 0x0373c909.
//
// Solidity: function redeemAmount() view returns(uint256)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) RedeemAmount() (*big.Int, error) {
	return _Redeemprotocolreverse.Contract.RedeemAmount(&_Redeemprotocolreverse.CallOpts)
}

// RedeemAmount is a free data retrieval call binding the contract method 0x0373c909.
//
// Solidity: function redeemAmount() view returns(uint256)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) RedeemAmount() (*big.Int, error) {
	return _Redeemprotocolreverse.Contract.RedeemAmount(&_Redeemprotocolreverse.CallOpts)
}

// RedeemMethod is a free data retrieval call binding the contract method 0xa3fe6fcb.
//
// Solidity: function redeemMethod() view returns(uint8)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) RedeemMethod(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "redeemMethod")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// RedeemMethod is a free data retrieval call binding the contract method 0xa3fe6fcb.
//
// Solidity: function redeemMethod() view returns(uint8)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) RedeemMethod() (uint8, error) {
	return _Redeemprotocolreverse.Contract.RedeemMethod(&_Redeemprotocolreverse.CallOpts)
}

// RedeemMethod is a free data retrieval call binding the contract method 0xa3fe6fcb.
//
// Solidity: function redeemMethod() view returns(uint8)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) RedeemMethod() (uint8, error) {
	return _Redeemprotocolreverse.Contract.RedeemMethod(&_Redeemprotocolreverse.CallOpts)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) SupportsInterface(opts *bind.CallOpts, interfaceId [4]byte) (bool, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "supportsInterface", interfaceId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _Redeemprotocolreverse.Contract.SupportsInterface(&_Redeemprotocolreverse.CallOpts, interfaceId)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _Redeemprotocolreverse.Contract.SupportsInterface(&_Redeemprotocolreverse.CallOpts, interfaceId)
}

// TokenReceiver is a free data retrieval call binding the contract method 0xa3e295bc.
//
// Solidity: function tokenReceiver() view returns(address)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) TokenReceiver(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "tokenReceiver")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TokenReceiver is a free data retrieval call binding the contract method 0xa3e295bc.
//
// Solidity: function tokenReceiver() view returns(address)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) TokenReceiver() (common.Address, error) {
	return _Redeemprotocolreverse.Contract.TokenReceiver(&_Redeemprotocolreverse.CallOpts)
}

// TokenReceiver is a free data retrieval call binding the contract method 0xa3e295bc.
//
// Solidity: function tokenReceiver() view returns(address)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) TokenReceiver() (common.Address, error) {
	return _Redeemprotocolreverse.Contract.TokenReceiver(&_Redeemprotocolreverse.CallOpts)
}

// UpdateFee is a free data retrieval call binding the contract method 0x758cdcf0.
//
// Solidity: function updateFee() view returns(uint256 amount, address token)
func (_Redeemprotocolreverse *RedeemprotocolreverseCaller) UpdateFee(opts *bind.CallOpts) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	var out []interface{}
	err := _Redeemprotocolreverse.contract.Call(opts, &out, "updateFee")

	outstruct := new(struct {
		Amount *big.Int
		Token  common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Token = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// UpdateFee is a free data retrieval call binding the contract method 0x758cdcf0.
//
// Solidity: function updateFee() view returns(uint256 amount, address token)
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) UpdateFee() (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolreverse.Contract.UpdateFee(&_Redeemprotocolreverse.CallOpts)
}

// UpdateFee is a free data retrieval call binding the contract method 0x758cdcf0.
//
// Solidity: function updateFee() view returns(uint256 amount, address token)
func (_Redeemprotocolreverse *RedeemprotocolreverseCallerSession) UpdateFee() (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolreverse.Contract.UpdateFee(&_Redeemprotocolreverse.CallOpts)
}

// GrantOperator is a paid mutator transaction binding the contract method 0xe348da13.
//
// Solidity: function grantOperator(address _operator) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) GrantOperator(opts *bind.TransactOpts, _operator common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "grantOperator", _operator)
}

// GrantOperator is a paid mutator transaction binding the contract method 0xe348da13.
//
// Solidity: function grantOperator(address _operator) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) GrantOperator(_operator common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.GrantOperator(&_Redeemprotocolreverse.TransactOpts, _operator)
}

// GrantOperator is a paid mutator transaction binding the contract method 0xe348da13.
//
// Solidity: function grantOperator(address _operator) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) GrantOperator(_operator common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.GrantOperator(&_Redeemprotocolreverse.TransactOpts, _operator)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) GrantRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "grantRole", role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.GrantRole(&_Redeemprotocolreverse.TransactOpts, role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.GrantRole(&_Redeemprotocolreverse.TransactOpts, role, account)
}

// Initialize is a paid mutator transaction binding the contract method 0x98f7f55e.
//
// Solidity: function initialize(uint8 _method, uint256 _redeemAmount, address _tokenReceiver) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) Initialize(opts *bind.TransactOpts, _method uint8, _redeemAmount *big.Int, _tokenReceiver common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "initialize", _method, _redeemAmount, _tokenReceiver)
}

// Initialize is a paid mutator transaction binding the contract method 0x98f7f55e.
//
// Solidity: function initialize(uint8 _method, uint256 _redeemAmount, address _tokenReceiver) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) Initialize(_method uint8, _redeemAmount *big.Int, _tokenReceiver common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.Initialize(&_Redeemprotocolreverse.TransactOpts, _method, _redeemAmount, _tokenReceiver)
}

// Initialize is a paid mutator transaction binding the contract method 0x98f7f55e.
//
// Solidity: function initialize(uint8 _method, uint256 _redeemAmount, address _tokenReceiver) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) Initialize(_method uint8, _redeemAmount *big.Int, _tokenReceiver common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.Initialize(&_Redeemprotocolreverse.TransactOpts, _method, _redeemAmount, _tokenReceiver)
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) Pause(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "pause")
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) Pause() (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.Pause(&_Redeemprotocolreverse.TransactOpts)
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) Pause() (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.Pause(&_Redeemprotocolreverse.TransactOpts)
}

// RedeemWithBurn is a paid mutator transaction binding the contract method 0xf273e323.
//
// Solidity: function redeemWithBurn(address _contractAddr, uint256 _tokenId, bytes32 _customId, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) RedeemWithBurn(opts *bind.TransactOpts, _contractAddr common.Address, _tokenId *big.Int, _customId [32]byte, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "redeemWithBurn", _contractAddr, _tokenId, _customId, _deadline, _v, _r, _s)
}

// RedeemWithBurn is a paid mutator transaction binding the contract method 0xf273e323.
//
// Solidity: function redeemWithBurn(address _contractAddr, uint256 _tokenId, bytes32 _customId, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) RedeemWithBurn(_contractAddr common.Address, _tokenId *big.Int, _customId [32]byte, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.RedeemWithBurn(&_Redeemprotocolreverse.TransactOpts, _contractAddr, _tokenId, _customId, _deadline, _v, _r, _s)
}

// RedeemWithBurn is a paid mutator transaction binding the contract method 0xf273e323.
//
// Solidity: function redeemWithBurn(address _contractAddr, uint256 _tokenId, bytes32 _customId, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) RedeemWithBurn(_contractAddr common.Address, _tokenId *big.Int, _customId [32]byte, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.RedeemWithBurn(&_Redeemprotocolreverse.TransactOpts, _contractAddr, _tokenId, _customId, _deadline, _v, _r, _s)
}

// RedeemWithMark is a paid mutator transaction binding the contract method 0xf6be3c2c.
//
// Solidity: function redeemWithMark(address _contractAddr, uint256 _tokenId, bytes32 _customId, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) RedeemWithMark(opts *bind.TransactOpts, _contractAddr common.Address, _tokenId *big.Int, _customId [32]byte, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "redeemWithMark", _contractAddr, _tokenId, _customId, _deadline, _v, _r, _s)
}

// RedeemWithMark is a paid mutator transaction binding the contract method 0xf6be3c2c.
//
// Solidity: function redeemWithMark(address _contractAddr, uint256 _tokenId, bytes32 _customId, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) RedeemWithMark(_contractAddr common.Address, _tokenId *big.Int, _customId [32]byte, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.RedeemWithMark(&_Redeemprotocolreverse.TransactOpts, _contractAddr, _tokenId, _customId, _deadline, _v, _r, _s)
}

// RedeemWithMark is a paid mutator transaction binding the contract method 0xf6be3c2c.
//
// Solidity: function redeemWithMark(address _contractAddr, uint256 _tokenId, bytes32 _customId, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) RedeemWithMark(_contractAddr common.Address, _tokenId *big.Int, _customId [32]byte, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.RedeemWithMark(&_Redeemprotocolreverse.TransactOpts, _contractAddr, _tokenId, _customId, _deadline, _v, _r, _s)
}

// RedeemWithTransfer is a paid mutator transaction binding the contract method 0x35ad36cf.
//
// Solidity: function redeemWithTransfer(address _contractAddr, uint256 _tokenId, bytes32 _customId, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) RedeemWithTransfer(opts *bind.TransactOpts, _contractAddr common.Address, _tokenId *big.Int, _customId [32]byte, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "redeemWithTransfer", _contractAddr, _tokenId, _customId, _deadline, _v, _r, _s)
}

// RedeemWithTransfer is a paid mutator transaction binding the contract method 0x35ad36cf.
//
// Solidity: function redeemWithTransfer(address _contractAddr, uint256 _tokenId, bytes32 _customId, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) RedeemWithTransfer(_contractAddr common.Address, _tokenId *big.Int, _customId [32]byte, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.RedeemWithTransfer(&_Redeemprotocolreverse.TransactOpts, _contractAddr, _tokenId, _customId, _deadline, _v, _r, _s)
}

// RedeemWithTransfer is a paid mutator transaction binding the contract method 0x35ad36cf.
//
// Solidity: function redeemWithTransfer(address _contractAddr, uint256 _tokenId, bytes32 _customId, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) RedeemWithTransfer(_contractAddr common.Address, _tokenId *big.Int, _customId [32]byte, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.RedeemWithTransfer(&_Redeemprotocolreverse.TransactOpts, _contractAddr, _tokenId, _customId, _deadline, _v, _r, _s)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) RenounceRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "renounceRole", role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.RenounceRole(&_Redeemprotocolreverse.TransactOpts, role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.RenounceRole(&_Redeemprotocolreverse.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) RevokeRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "revokeRole", role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.RevokeRole(&_Redeemprotocolreverse.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.RevokeRole(&_Redeemprotocolreverse.TransactOpts, role, account)
}

// SetBaseRedeemFee is a paid mutator transaction binding the contract method 0x45d335e3.
//
// Solidity: function setBaseRedeemFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) SetBaseRedeemFee(opts *bind.TransactOpts, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "setBaseRedeemFee", _amount, _token)
}

// SetBaseRedeemFee is a paid mutator transaction binding the contract method 0x45d335e3.
//
// Solidity: function setBaseRedeemFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) SetBaseRedeemFee(_amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.SetBaseRedeemFee(&_Redeemprotocolreverse.TransactOpts, _amount, _token)
}

// SetBaseRedeemFee is a paid mutator transaction binding the contract method 0x45d335e3.
//
// Solidity: function setBaseRedeemFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) SetBaseRedeemFee(_amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.SetBaseRedeemFee(&_Redeemprotocolreverse.TransactOpts, _amount, _token)
}

// SetRedeemAmount is a paid mutator transaction binding the contract method 0x61e41e28.
//
// Solidity: function setRedeemAmount(uint256 _amount) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) SetRedeemAmount(opts *bind.TransactOpts, _amount *big.Int) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "setRedeemAmount", _amount)
}

// SetRedeemAmount is a paid mutator transaction binding the contract method 0x61e41e28.
//
// Solidity: function setRedeemAmount(uint256 _amount) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) SetRedeemAmount(_amount *big.Int) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.SetRedeemAmount(&_Redeemprotocolreverse.TransactOpts, _amount)
}

// SetRedeemAmount is a paid mutator transaction binding the contract method 0x61e41e28.
//
// Solidity: function setRedeemAmount(uint256 _amount) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) SetRedeemAmount(_amount *big.Int) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.SetRedeemAmount(&_Redeemprotocolreverse.TransactOpts, _amount)
}

// SetUpdateFee is a paid mutator transaction binding the contract method 0xef573bba.
//
// Solidity: function setUpdateFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) SetUpdateFee(opts *bind.TransactOpts, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "setUpdateFee", _amount, _token)
}

// SetUpdateFee is a paid mutator transaction binding the contract method 0xef573bba.
//
// Solidity: function setUpdateFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) SetUpdateFee(_amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.SetUpdateFee(&_Redeemprotocolreverse.TransactOpts, _amount, _token)
}

// SetUpdateFee is a paid mutator transaction binding the contract method 0xef573bba.
//
// Solidity: function setUpdateFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) SetUpdateFee(_amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.SetUpdateFee(&_Redeemprotocolreverse.TransactOpts, _amount, _token)
}

// UpdateReverse is a paid mutator transaction binding the contract method 0x58f2c097.
//
// Solidity: function updateReverse(uint8 _method, uint256 _redeemAmount, address _tokenReceiver, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) UpdateReverse(opts *bind.TransactOpts, _method uint8, _redeemAmount *big.Int, _tokenReceiver common.Address, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "updateReverse", _method, _redeemAmount, _tokenReceiver, _deadline, _v, _r, _s)
}

// UpdateReverse is a paid mutator transaction binding the contract method 0x58f2c097.
//
// Solidity: function updateReverse(uint8 _method, uint256 _redeemAmount, address _tokenReceiver, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) UpdateReverse(_method uint8, _redeemAmount *big.Int, _tokenReceiver common.Address, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.UpdateReverse(&_Redeemprotocolreverse.TransactOpts, _method, _redeemAmount, _tokenReceiver, _deadline, _v, _r, _s)
}

// UpdateReverse is a paid mutator transaction binding the contract method 0x58f2c097.
//
// Solidity: function updateReverse(uint8 _method, uint256 _redeemAmount, address _tokenReceiver, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) UpdateReverse(_method uint8, _redeemAmount *big.Int, _tokenReceiver common.Address, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.UpdateReverse(&_Redeemprotocolreverse.TransactOpts, _method, _redeemAmount, _tokenReceiver, _deadline, _v, _r, _s)
}

// Withdraw is a paid mutator transaction binding the contract method 0x69328dec.
//
// Solidity: function withdraw(address _token, uint256 _amount, address _receiver) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactor) Withdraw(opts *bind.TransactOpts, _token common.Address, _amount *big.Int, _receiver common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.contract.Transact(opts, "withdraw", _token, _amount, _receiver)
}

// Withdraw is a paid mutator transaction binding the contract method 0x69328dec.
//
// Solidity: function withdraw(address _token, uint256 _amount, address _receiver) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseSession) Withdraw(_token common.Address, _amount *big.Int, _receiver common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.Withdraw(&_Redeemprotocolreverse.TransactOpts, _token, _amount, _receiver)
}

// Withdraw is a paid mutator transaction binding the contract method 0x69328dec.
//
// Solidity: function withdraw(address _token, uint256 _amount, address _receiver) returns()
func (_Redeemprotocolreverse *RedeemprotocolreverseTransactorSession) Withdraw(_token common.Address, _amount *big.Int, _receiver common.Address) (*types.Transaction, error) {
	return _Redeemprotocolreverse.Contract.Withdraw(&_Redeemprotocolreverse.TransactOpts, _token, _amount, _receiver)
}

// RedeemprotocolreversePausedIterator is returned from FilterPaused and is used to iterate over the raw logs and unpacked data for Paused events raised by the Redeemprotocolreverse contract.
type RedeemprotocolreversePausedIterator struct {
	Event *RedeemprotocolreversePaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RedeemprotocolreversePausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RedeemprotocolreversePaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RedeemprotocolreversePaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RedeemprotocolreversePausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RedeemprotocolreversePausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RedeemprotocolreversePaused represents a Paused event raised by the Redeemprotocolreverse contract.
type RedeemprotocolreversePaused struct {
	Account common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterPaused is a free log retrieval operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) FilterPaused(opts *bind.FilterOpts) (*RedeemprotocolreversePausedIterator, error) {

	logs, sub, err := _Redeemprotocolreverse.contract.FilterLogs(opts, "Paused")
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolreversePausedIterator{contract: _Redeemprotocolreverse.contract, event: "Paused", logs: logs, sub: sub}, nil
}

// WatchPaused is a free log subscription operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) WatchPaused(opts *bind.WatchOpts, sink chan<- *RedeemprotocolreversePaused) (event.Subscription, error) {

	logs, sub, err := _Redeemprotocolreverse.contract.WatchLogs(opts, "Paused")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RedeemprotocolreversePaused)
				if err := _Redeemprotocolreverse.contract.UnpackLog(event, "Paused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaused is a log parse operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) ParsePaused(log types.Log) (*RedeemprotocolreversePaused, error) {
	event := new(RedeemprotocolreversePaused)
	if err := _Redeemprotocolreverse.contract.UnpackLog(event, "Paused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// RedeemprotocolreverseRedeemedIterator is returned from FilterRedeemed and is used to iterate over the raw logs and unpacked data for Redeemed events raised by the Redeemprotocolreverse contract.
type RedeemprotocolreverseRedeemedIterator struct {
	Event *RedeemprotocolreverseRedeemed // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RedeemprotocolreverseRedeemedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RedeemprotocolreverseRedeemed)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RedeemprotocolreverseRedeemed)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RedeemprotocolreverseRedeemedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RedeemprotocolreverseRedeemedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RedeemprotocolreverseRedeemed represents a Redeemed event raised by the Redeemprotocolreverse contract.
type RedeemprotocolreverseRedeemed struct {
	ContractAddress common.Address
	TokenId         *big.Int
	RedeemMethod    uint8
	Redeemer        common.Address
	CustomId        [32]byte
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterRedeemed is a free log retrieval operation binding the contract event 0x6a694edf7fb728c1b38ab129b298edb240d668a775d77af8305d1b1b6923d1ba.
//
// Solidity: event Redeemed(address indexed contractAddress, uint256 indexed tokenId, uint8 indexed redeemMethod, address redeemer, bytes32 customId)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) FilterRedeemed(opts *bind.FilterOpts, contractAddress []common.Address, tokenId []*big.Int, redeemMethod []uint8) (*RedeemprotocolreverseRedeemedIterator, error) {

	var contractAddressRule []interface{}
	for _, contractAddressItem := range contractAddress {
		contractAddressRule = append(contractAddressRule, contractAddressItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}
	var redeemMethodRule []interface{}
	for _, redeemMethodItem := range redeemMethod {
		redeemMethodRule = append(redeemMethodRule, redeemMethodItem)
	}

	logs, sub, err := _Redeemprotocolreverse.contract.FilterLogs(opts, "Redeemed", contractAddressRule, tokenIdRule, redeemMethodRule)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolreverseRedeemedIterator{contract: _Redeemprotocolreverse.contract, event: "Redeemed", logs: logs, sub: sub}, nil
}

// WatchRedeemed is a free log subscription operation binding the contract event 0x6a694edf7fb728c1b38ab129b298edb240d668a775d77af8305d1b1b6923d1ba.
//
// Solidity: event Redeemed(address indexed contractAddress, uint256 indexed tokenId, uint8 indexed redeemMethod, address redeemer, bytes32 customId)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) WatchRedeemed(opts *bind.WatchOpts, sink chan<- *RedeemprotocolreverseRedeemed, contractAddress []common.Address, tokenId []*big.Int, redeemMethod []uint8) (event.Subscription, error) {

	var contractAddressRule []interface{}
	for _, contractAddressItem := range contractAddress {
		contractAddressRule = append(contractAddressRule, contractAddressItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}
	var redeemMethodRule []interface{}
	for _, redeemMethodItem := range redeemMethod {
		redeemMethodRule = append(redeemMethodRule, redeemMethodItem)
	}

	logs, sub, err := _Redeemprotocolreverse.contract.WatchLogs(opts, "Redeemed", contractAddressRule, tokenIdRule, redeemMethodRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RedeemprotocolreverseRedeemed)
				if err := _Redeemprotocolreverse.contract.UnpackLog(event, "Redeemed", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRedeemed is a log parse operation binding the contract event 0x6a694edf7fb728c1b38ab129b298edb240d668a775d77af8305d1b1b6923d1ba.
//
// Solidity: event Redeemed(address indexed contractAddress, uint256 indexed tokenId, uint8 indexed redeemMethod, address redeemer, bytes32 customId)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) ParseRedeemed(log types.Log) (*RedeemprotocolreverseRedeemed, error) {
	event := new(RedeemprotocolreverseRedeemed)
	if err := _Redeemprotocolreverse.contract.UnpackLog(event, "Redeemed", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// RedeemprotocolreverseRoleAdminChangedIterator is returned from FilterRoleAdminChanged and is used to iterate over the raw logs and unpacked data for RoleAdminChanged events raised by the Redeemprotocolreverse contract.
type RedeemprotocolreverseRoleAdminChangedIterator struct {
	Event *RedeemprotocolreverseRoleAdminChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RedeemprotocolreverseRoleAdminChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RedeemprotocolreverseRoleAdminChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RedeemprotocolreverseRoleAdminChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RedeemprotocolreverseRoleAdminChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RedeemprotocolreverseRoleAdminChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RedeemprotocolreverseRoleAdminChanged represents a RoleAdminChanged event raised by the Redeemprotocolreverse contract.
type RedeemprotocolreverseRoleAdminChanged struct {
	Role              [32]byte
	PreviousAdminRole [32]byte
	NewAdminRole      [32]byte
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterRoleAdminChanged is a free log retrieval operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) FilterRoleAdminChanged(opts *bind.FilterOpts, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (*RedeemprotocolreverseRoleAdminChangedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _Redeemprotocolreverse.contract.FilterLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolreverseRoleAdminChangedIterator{contract: _Redeemprotocolreverse.contract, event: "RoleAdminChanged", logs: logs, sub: sub}, nil
}

// WatchRoleAdminChanged is a free log subscription operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) WatchRoleAdminChanged(opts *bind.WatchOpts, sink chan<- *RedeemprotocolreverseRoleAdminChanged, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _Redeemprotocolreverse.contract.WatchLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RedeemprotocolreverseRoleAdminChanged)
				if err := _Redeemprotocolreverse.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleAdminChanged is a log parse operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) ParseRoleAdminChanged(log types.Log) (*RedeemprotocolreverseRoleAdminChanged, error) {
	event := new(RedeemprotocolreverseRoleAdminChanged)
	if err := _Redeemprotocolreverse.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// RedeemprotocolreverseRoleGrantedIterator is returned from FilterRoleGranted and is used to iterate over the raw logs and unpacked data for RoleGranted events raised by the Redeemprotocolreverse contract.
type RedeemprotocolreverseRoleGrantedIterator struct {
	Event *RedeemprotocolreverseRoleGranted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RedeemprotocolreverseRoleGrantedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RedeemprotocolreverseRoleGranted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RedeemprotocolreverseRoleGranted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RedeemprotocolreverseRoleGrantedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RedeemprotocolreverseRoleGrantedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RedeemprotocolreverseRoleGranted represents a RoleGranted event raised by the Redeemprotocolreverse contract.
type RedeemprotocolreverseRoleGranted struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleGranted is a free log retrieval operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) FilterRoleGranted(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*RedeemprotocolreverseRoleGrantedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Redeemprotocolreverse.contract.FilterLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolreverseRoleGrantedIterator{contract: _Redeemprotocolreverse.contract, event: "RoleGranted", logs: logs, sub: sub}, nil
}

// WatchRoleGranted is a free log subscription operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) WatchRoleGranted(opts *bind.WatchOpts, sink chan<- *RedeemprotocolreverseRoleGranted, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Redeemprotocolreverse.contract.WatchLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RedeemprotocolreverseRoleGranted)
				if err := _Redeemprotocolreverse.contract.UnpackLog(event, "RoleGranted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleGranted is a log parse operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) ParseRoleGranted(log types.Log) (*RedeemprotocolreverseRoleGranted, error) {
	event := new(RedeemprotocolreverseRoleGranted)
	if err := _Redeemprotocolreverse.contract.UnpackLog(event, "RoleGranted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// RedeemprotocolreverseRoleRevokedIterator is returned from FilterRoleRevoked and is used to iterate over the raw logs and unpacked data for RoleRevoked events raised by the Redeemprotocolreverse contract.
type RedeemprotocolreverseRoleRevokedIterator struct {
	Event *RedeemprotocolreverseRoleRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RedeemprotocolreverseRoleRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RedeemprotocolreverseRoleRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RedeemprotocolreverseRoleRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RedeemprotocolreverseRoleRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RedeemprotocolreverseRoleRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RedeemprotocolreverseRoleRevoked represents a RoleRevoked event raised by the Redeemprotocolreverse contract.
type RedeemprotocolreverseRoleRevoked struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleRevoked is a free log retrieval operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) FilterRoleRevoked(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*RedeemprotocolreverseRoleRevokedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Redeemprotocolreverse.contract.FilterLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolreverseRoleRevokedIterator{contract: _Redeemprotocolreverse.contract, event: "RoleRevoked", logs: logs, sub: sub}, nil
}

// WatchRoleRevoked is a free log subscription operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) WatchRoleRevoked(opts *bind.WatchOpts, sink chan<- *RedeemprotocolreverseRoleRevoked, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Redeemprotocolreverse.contract.WatchLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RedeemprotocolreverseRoleRevoked)
				if err := _Redeemprotocolreverse.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleRevoked is a log parse operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) ParseRoleRevoked(log types.Log) (*RedeemprotocolreverseRoleRevoked, error) {
	event := new(RedeemprotocolreverseRoleRevoked)
	if err := _Redeemprotocolreverse.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// RedeemprotocolreverseUnpausedIterator is returned from FilterUnpaused and is used to iterate over the raw logs and unpacked data for Unpaused events raised by the Redeemprotocolreverse contract.
type RedeemprotocolreverseUnpausedIterator struct {
	Event *RedeemprotocolreverseUnpaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RedeemprotocolreverseUnpausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RedeemprotocolreverseUnpaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RedeemprotocolreverseUnpaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RedeemprotocolreverseUnpausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RedeemprotocolreverseUnpausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RedeemprotocolreverseUnpaused represents a Unpaused event raised by the Redeemprotocolreverse contract.
type RedeemprotocolreverseUnpaused struct {
	Account common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterUnpaused is a free log retrieval operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) FilterUnpaused(opts *bind.FilterOpts) (*RedeemprotocolreverseUnpausedIterator, error) {

	logs, sub, err := _Redeemprotocolreverse.contract.FilterLogs(opts, "Unpaused")
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolreverseUnpausedIterator{contract: _Redeemprotocolreverse.contract, event: "Unpaused", logs: logs, sub: sub}, nil
}

// WatchUnpaused is a free log subscription operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) WatchUnpaused(opts *bind.WatchOpts, sink chan<- *RedeemprotocolreverseUnpaused) (event.Subscription, error) {

	logs, sub, err := _Redeemprotocolreverse.contract.WatchLogs(opts, "Unpaused")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RedeemprotocolreverseUnpaused)
				if err := _Redeemprotocolreverse.contract.UnpackLog(event, "Unpaused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnpaused is a log parse operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) ParseUnpaused(log types.Log) (*RedeemprotocolreverseUnpaused, error) {
	event := new(RedeemprotocolreverseUnpaused)
	if err := _Redeemprotocolreverse.contract.UnpackLog(event, "Unpaused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// RedeemprotocolreverseUpdatedIterator is returned from FilterUpdated and is used to iterate over the raw logs and unpacked data for Updated events raised by the Redeemprotocolreverse contract.
type RedeemprotocolreverseUpdatedIterator struct {
	Event *RedeemprotocolreverseUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RedeemprotocolreverseUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RedeemprotocolreverseUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RedeemprotocolreverseUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RedeemprotocolreverseUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RedeemprotocolreverseUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RedeemprotocolreverseUpdated represents a Updated event raised by the Redeemprotocolreverse contract.
type RedeemprotocolreverseUpdated struct {
	RedeemAmount  *big.Int
	RedeemMethod  uint8
	TokenReceiver common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterUpdated is a free log retrieval operation binding the contract event 0x79a6ccfd52698aa33bd8cc221b2a5121a21ff610b21e3ca09051eaba3d9d2694.
//
// Solidity: event Updated(uint256 indexed redeemAmount, uint8 indexed redeemMethod, address indexed tokenReceiver)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) FilterUpdated(opts *bind.FilterOpts, redeemAmount []*big.Int, redeemMethod []uint8, tokenReceiver []common.Address) (*RedeemprotocolreverseUpdatedIterator, error) {

	var redeemAmountRule []interface{}
	for _, redeemAmountItem := range redeemAmount {
		redeemAmountRule = append(redeemAmountRule, redeemAmountItem)
	}
	var redeemMethodRule []interface{}
	for _, redeemMethodItem := range redeemMethod {
		redeemMethodRule = append(redeemMethodRule, redeemMethodItem)
	}
	var tokenReceiverRule []interface{}
	for _, tokenReceiverItem := range tokenReceiver {
		tokenReceiverRule = append(tokenReceiverRule, tokenReceiverItem)
	}

	logs, sub, err := _Redeemprotocolreverse.contract.FilterLogs(opts, "Updated", redeemAmountRule, redeemMethodRule, tokenReceiverRule)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolreverseUpdatedIterator{contract: _Redeemprotocolreverse.contract, event: "Updated", logs: logs, sub: sub}, nil
}

// WatchUpdated is a free log subscription operation binding the contract event 0x79a6ccfd52698aa33bd8cc221b2a5121a21ff610b21e3ca09051eaba3d9d2694.
//
// Solidity: event Updated(uint256 indexed redeemAmount, uint8 indexed redeemMethod, address indexed tokenReceiver)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) WatchUpdated(opts *bind.WatchOpts, sink chan<- *RedeemprotocolreverseUpdated, redeemAmount []*big.Int, redeemMethod []uint8, tokenReceiver []common.Address) (event.Subscription, error) {

	var redeemAmountRule []interface{}
	for _, redeemAmountItem := range redeemAmount {
		redeemAmountRule = append(redeemAmountRule, redeemAmountItem)
	}
	var redeemMethodRule []interface{}
	for _, redeemMethodItem := range redeemMethod {
		redeemMethodRule = append(redeemMethodRule, redeemMethodItem)
	}
	var tokenReceiverRule []interface{}
	for _, tokenReceiverItem := range tokenReceiver {
		tokenReceiverRule = append(tokenReceiverRule, tokenReceiverItem)
	}

	logs, sub, err := _Redeemprotocolreverse.contract.WatchLogs(opts, "Updated", redeemAmountRule, redeemMethodRule, tokenReceiverRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RedeemprotocolreverseUpdated)
				if err := _Redeemprotocolreverse.contract.UnpackLog(event, "Updated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpdated is a log parse operation binding the contract event 0x79a6ccfd52698aa33bd8cc221b2a5121a21ff610b21e3ca09051eaba3d9d2694.
//
// Solidity: event Updated(uint256 indexed redeemAmount, uint8 indexed redeemMethod, address indexed tokenReceiver)
func (_Redeemprotocolreverse *RedeemprotocolreverseFilterer) ParseUpdated(log types.Log) (*RedeemprotocolreverseUpdated, error) {
	event := new(RedeemprotocolreverseUpdated)
	if err := _Redeemprotocolreverse.contract.UnpackLog(event, "Updated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
