// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package redeemprotocolfactory

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// RedeemProtocolTypeFee is an auto generated low-level Go binding around an user-defined struct.
type RedeemProtocolTypeFee struct {
	Amount *big.Int
	Token  common.Address
}

// RedeemprotocolfactoryMetaData contains all meta data concerning the Redeemprotocolfactory contract.
var RedeemprotocolfactoryMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"structRedeemProtocolType.Fee\",\"name\":\"_defaultSetupFee\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"structRedeemProtocolType.Fee\",\"name\":\"_defaultUpdateFee\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"structRedeemProtocolType.Fee\",\"name\":\"_defaultBaseRedeemFee\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"reverse\",\"type\":\"address\"}],\"name\":\"ReverseCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVERSE_CREATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_CREATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allReverses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveOnly\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enumRedeemProtocolType.RedeemMethod\",\"name\":\"_method\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_redeemAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_forwarder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"createReverse\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"reverse\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultBaseRedeemFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultSetupFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"designateBaseRedeemFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"designateSetupFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"designateUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flipApprovedOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"flipValidRedeemToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reverse\",\"type\":\"address\"}],\"name\":\"pauseReverse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reverse\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setBaseRedeemFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setDefaultBaseRedeemFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setDefaultSetupFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setDefaultUpdateFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setDesignateBaseRedeemFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setDesignateSetupFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setDesignateUpdateFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"setFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reverse\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setRedeemAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reverse\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setUpdateFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validRedeemToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60806040526001600360006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b506040516200914838038062009148833981810160405281019062000052919062000718565b600180819055506200008b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42336200039160201b60201c565b620000bd7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c336200039160201b60201c565b620000ef7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42806200048260201b60201c565b620001417f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec426200048260201b60201c565b620001937f4353bba56e92f8bd053bf4e23ca2ee2e18d9f754fd362ed94ce95bd7b20ab1697f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c6200048260201b60201c565b620001e57f16faf36a4558ff181e1dfd2b031de586aac0ac52b0d0111e89054ceb1542ebd67f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c6200048260201b60201c565b8360046000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508260066000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508160086000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506001600d6000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200078a565b620003a38282620004e560201b60201c565b6200047e57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620004236200054f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600062000495836200055760201b60201c565b905081600080858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b6000806000838152602001908152602001600020600101549050919050565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005d5826200058a565b810181811067ffffffffffffffff82111715620005f757620005f66200059b565b5b80604052505050565b60006200060c62000576565b90506200061a8282620005ca565b919050565b6000819050919050565b62000634816200061f565b81146200064057600080fd5b50565b600081519050620006548162000629565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000687826200065a565b9050919050565b62000699816200067a565b8114620006a557600080fd5b50565b600081519050620006b9816200068e565b92915050565b600060408284031215620006d857620006d762000585565b5b620006e4604062000600565b90506000620006f68482850162000643565b60008301525060206200070c84828501620006a8565b60208301525092915050565b60008060008060e0858703121562000735576200073462000580565b5b60006200074587828801620006bf565b94505060406200075887828801620006bf565b93505060806200076b87828801620006bf565b92505060c06200077e87828801620006a8565b91505092959194509250565b6189ae806200079a6000396000f3fe60806040523480156200001157600080fd5b5060043610620002505760003560e01c806371a6f2381162000141578063a217fddf11620000bd578063bb1e15071162000087578063bb1e150714620006eb578063d547741f1462000721578063e157becf1462000741578063efdcd9741462000761578063fb480cc614620007815762000250565b8063a217fddf1462000665578063aac935dd1462000687578063b0255ab214620006a7578063b3f0067414620006c95762000250565b806385df3fa0116200010b57806385df3fa014620005ab578063889c864314620005cb57806391d1485414620005ed57806393942ab81462000623578063983d273714620006435762000250565b806371a6f2381462000528578063750bf9ec146200054857806379cebc56146200056b578063853370d5146200058b5762000250565b80635098366811620001d157806366968cd0116200019b57806366968cd0146200046b578063670ee4e114620004a2578063677ff46414620004c257806369328dec14620004e557806370bdf18214620005055762000250565b80635098366814620003d05780635a57f8b414620003dc5780635f0f120814620004135780636093860114620004495762000250565b80632a0acc6a116200021f5780632a0acc6a14620003175780632f2ff15d146200033957806336568abe1462000359578063389f742814620003795780634aaed0a914620003b05762000250565b806301ffc9a7146200025557806310b87df8146200028b5780631caebd8414620002c1578063248a9ca314620002e1575b600080fd5b6200027360048036038101906200026d919062002c3a565b620007a1565b60405162000282919062002c89565b60405180910390f35b620002a96004803603810190620002a3919062002ce1565b6200081e565b604051620002b8919062002d58565b60405180910390f35b620002df6004803603810190620002d9919062002da6565b6200085e565b005b620002ff6004803603810190620002f9919062002e28565b6200094f565b6040516200030e919062002e6b565b60405180910390f35b620003216200096e565b60405162000330919062002e6b565b60405180910390f35b62000357600480360381019062000351919062002e88565b62000992565b005b62000377600480360381019062000371919062002e88565b620009b9565b005b62000397600480360381019062000391919062002ecf565b62000a43565b604051620003a792919062002f12565b60405180910390f35b620003ce6004803603810190620003c8919062002f3f565b62000a87565b005b620003da62000b2a565b005b620003fa6004803603810190620003f4919062002ecf565b62000b83565b6040516200040a92919062002f12565b60405180910390f35b6200043160048036038101906200042b919062002ecf565b62000bc7565b60405162000440919062002c89565b60405180910390f35b6200045362000be7565b60405162000462919062002c89565b60405180910390f35b62000489600480360381019062000483919062002ecf565b62000bfa565b6040516200049992919062002f12565b60405180910390f35b620004c06004803603810190620004ba919062002f3f565b62000c3e565b005b620004cc62000daa565b604051620004dc92919062002f12565b60405180910390f35b620005036004803603810190620004fd919062002f3f565b62000ddc565b005b6200050f62000ff4565b6040516200051f92919062002f12565b60405180910390f35b62000546600480360381019062000540919062002f9b565b62001026565b005b62000552620010c6565b6040516200056292919062002f12565b60405180910390f35b62000589600480360381019062000583919062002ecf565b620010f8565b005b620005a96004803603810190620005a3919062002f3f565b6200118a565b005b620005c96004803603810190620005c3919062002ecf565b62001385565b005b620005d562001459565b604051620005e4919062002e6b565b60405180910390f35b6200060b600480360381019062000605919062002e88565b6200147d565b6040516200061a919062002c89565b60405180910390f35b6200064160048036038101906200063b919062002f3f565b620014e7565b005b6200064d62001653565b6040516200065c919062002e6b565b60405180910390f35b6200066f62001677565b6040516200067e919062002e6b565b60405180910390f35b620006a560048036038101906200069f919062002da6565b6200167e565b005b620006b1620017fe565b604051620006c0919062002e6b565b60405180910390f35b620006d362001822565b604051620006e2919062002d58565b60405180910390f35b62000709600480360381019062000703919062003048565b62001848565b60405162000718919062002d58565b60405180910390f35b6200073f600480360381019062000739919062002e88565b6200230a565b005b6200075f600480360381019062000759919062002f3f565b62002331565b005b6200077f600480360381019062000779919062002ecf565b620023d4565b005b6200079f600480360381019062000799919062002da6565b62002445565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480620008175750620008168262002536565b5b9050919050565b600f81815481106200082f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c6200088a81620025a0565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620008fc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008f39062003172565b60405180910390fd5b8260046000018190555081600460010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000806000838152602001908152602001600020600101549050919050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b6200099d826200094f565b620009a881620025a0565b620009b48383620025b8565b505050565b620009c36200269d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000a33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a2a906200320a565b60405180910390fd5b62000a3f8282620026a5565b5050565b600b6020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c62000ab381620025a0565b8373ffffffffffffffffffffffffffffffffffffffff166345d335e384846040518363ffffffff1660e01b815260040162000af092919062002f12565b600060405180830381600087803b15801562000b0b57600080fd5b505af115801562000b20573d6000803e3d6000fd5b5050505050505050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c62000b5681620025a0565b600360009054906101000a900460ff1615600360006101000a81548160ff02191690831515021790555050565b600a6020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600d6020528060005260406000206000915054906101000a900460ff1681565b600360009054906101000a900460ff1681565b600c6020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c62000c6a81620025a0565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000cdc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000cd39062003172565b60405180910390fd5b82600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555081600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60068060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60026001540362000e24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000e1b906200327c565b60405180910390fd5b60026001819055507fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4262000e5881620025a0565b828473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040162000e94919062002d58565b602060405180830381865afa15801562000eb2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ed89190620032b5565b101562000f1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000f139062003337565b60405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b815260040162000f5b92919062003359565b6020604051808303816000875af115801562000f7b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fa19190620033b7565b90508062000fe6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000fdd9062003439565b60405180910390fd5b505060018081905550505050565b60088060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c6200105281620025a0565b8273ffffffffffffffffffffffffffffffffffffffff166361e41e28836040518263ffffffff1660e01b81526004016200108d91906200345b565b600060405180830381600087803b158015620010a857600080fd5b505af1158015620010bd573d6000803e3d6000fd5b50505050505050565b60048060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec426200112481620025a0565b8173ffffffffffffffffffffffffffffffffffffffff16638456cb596040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200116d57600080fd5b505af115801562001182573d6000803e3d6000fd5b505050505050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c620011b681620025a0565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362001228576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200121f9062003172565b60405180910390fd5b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16620012b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620012ae90620034c8565b60405180910390fd5b82600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555081600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c620013b181620025a0565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b7f4353bba56e92f8bd053bf4e23ca2ee2e18d9f754fd362ed94ce95bd7b20ab16981565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c6200151381620025a0565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362001585576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200157c9062003172565b60405180910390fd5b82600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555081600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c81565b6000801b81565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c620016aa81620025a0565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200171c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620017139062003172565b60405180910390fd5b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16620017ab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620017a290620034c8565b60405180910390fd5b8260086000018190555081600860010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b7f16faf36a4558ff181e1dfd2b031de586aac0ac52b0d0111e89054ceb1542ebd681565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360009054906101000a900460ff1680156200189057506200188e7f4353bba56e92f8bd053bf4e23ca2ee2e18d9f754fd362ed94ce95bd7b20ab169336200147d565b155b156200190557620018c27f16faf36a4558ff181e1dfd2b031de586aac0ac52b0d0111e89054ceb1542ebd6336200147d565b62001904576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620018fb906200353a565b60405180910390fd5b5b600160028111156200191c576200191b6200355c565b5b8960028111156200193257620019316200355c565b5b03620019ab57600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603620019aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620019a190620035db565b60405180910390fd5b5b60008073ffffffffffffffffffffffffffffffffffffffff16600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462001a8857600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002062001a8b565b60085b604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060006006604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462001ce757600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548160000181815250505b60006040518060200162001cfb9062002bca565b6020820181038252601f19601f82011660405250338a848660405160200162001d28949392919062003652565b60405160208183030381529060405260405160200162001d4a92919062003718565b60405160208183030381529060405290506000334662001d6b60026200278b565b60405160200162001d7f9392919062003740565b60405160208183030381529060405280519060200120905062001da3600262002799565b62001db160008284620027af565b9450505050508073ffffffffffffffffffffffffffffffffffffffff166398f7f55e8a8a8a6040518463ffffffff1660e01b815260040162001df693929190620037ce565b600060405180830381600087803b15801562001e1157600080fd5b505af115801562001e26573d6000803e3d6000fd5b50505050600f819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006004604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200207c57600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548160000181815250505b6000861415801562002092575060008560ff1614155b8015620020df5750600060f81b84600060208110620020b657620020b56200380b565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b80156200212c5750600060f81b836000602081106200210357620021026200380b565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b15620021b657806020015173ffffffffffffffffffffffffffffffffffffffff1663d505accf333084600001518a8a8a8a6040518863ffffffff1660e01b81526004016200218197969594939291906200384b565b600060405180830381600087803b1580156200219c57600080fd5b505af1158015620021b1573d6000803e3d6000fd5b505050505b6000816020015173ffffffffffffffffffffffffffffffffffffffff166323b872dd33600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600001516040518463ffffffff1660e01b81526004016200222193929190620038c8565b6020604051808303816000875af115801562002241573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022679190620033b7565b905080620022ac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620022a39062003955565b60405180910390fd5b50503373ffffffffffffffffffffffffffffffffffffffff167ff4951aefe551b8c9844809ed0522581563561691afa773f7977e1753746f435082604051620022f6919062002d58565b60405180910390a298975050505050505050565b62002315826200094f565b6200232081620025a0565b6200232c8383620026a5565b505050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c6200235d81620025a0565b8373ffffffffffffffffffffffffffffffffffffffff1663ef573bba84846040518363ffffffff1660e01b81526004016200239a92919062002f12565b600060405180830381600087803b158015620023b557600080fd5b505af1158015620023ca573d6000803e3d6000fd5b5050505050505050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec426200240081620025a0565b81600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c6200247181620025a0565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620024e3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620024da9062003172565b60405180910390fd5b8260066000018190555081600660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b620025b581620025af6200269d565b620028c7565b50565b620025c482826200147d565b6200269957600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200263e6200269d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b620026b182826200147d565b156200278757600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200272c6200269d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600081600001549050919050565b6001816000016000828254019250508190555050565b60008084471015620027f8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620027ef90620039c7565b60405180910390fd5b60008351036200283f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620028369062003a39565b60405180910390fd5b8383516020850187f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620028bc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620028b39062003aab565b60405180910390fd5b809150509392505050565b620028d382826200147d565b6200296b57620028fb8173ffffffffffffffffffffffffffffffffffffffff1660146200296f565b6200290b8360001c60206200296f565b6040516020016200291e92919062003bba565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162002962919062003c4e565b60405180910390fd5b5050565b60606000600283600262002984919062003ca1565b62002990919062003d02565b67ffffffffffffffff811115620029ac57620029ab62003d3d565b5b6040519080825280601f01601f191660200182016040528015620029df5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811062002a1a5762002a196200380b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811062002a815762002a806200380b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600262002ac3919062003ca1565b62002acf919062003d02565b90505b600181111562002b79577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811062002b155762002b146200380b565b5b1a60f81b82828151811062002b2f5762002b2e6200380b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508062002b719062003d6c565b905062002ad2565b506000841462002bc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162002bb79062003dea565b60405180910390fd5b8091505092915050565b614b6c8062003e0d83390190565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b62002c148162002bdd565b811462002c2057600080fd5b50565b60008135905062002c348162002c09565b92915050565b60006020828403121562002c535762002c5262002bd8565b5b600062002c638482850162002c23565b91505092915050565b60008115159050919050565b62002c838162002c6c565b82525050565b600060208201905062002ca0600083018462002c78565b92915050565b6000819050919050565b62002cbb8162002ca6565b811462002cc757600080fd5b50565b60008135905062002cdb8162002cb0565b92915050565b60006020828403121562002cfa5762002cf962002bd8565b5b600062002d0a8482850162002cca565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062002d408262002d13565b9050919050565b62002d528162002d33565b82525050565b600060208201905062002d6f600083018462002d47565b92915050565b62002d808162002d33565b811462002d8c57600080fd5b50565b60008135905062002da08162002d75565b92915050565b6000806040838503121562002dc05762002dbf62002bd8565b5b600062002dd08582860162002cca565b925050602062002de38582860162002d8f565b9150509250929050565b6000819050919050565b62002e028162002ded565b811462002e0e57600080fd5b50565b60008135905062002e228162002df7565b92915050565b60006020828403121562002e415762002e4062002bd8565b5b600062002e518482850162002e11565b91505092915050565b62002e658162002ded565b82525050565b600060208201905062002e82600083018462002e5a565b92915050565b6000806040838503121562002ea25762002ea162002bd8565b5b600062002eb28582860162002e11565b925050602062002ec58582860162002d8f565b9150509250929050565b60006020828403121562002ee85762002ee762002bd8565b5b600062002ef88482850162002d8f565b91505092915050565b62002f0c8162002ca6565b82525050565b600060408201905062002f29600083018562002f01565b62002f38602083018462002d47565b9392505050565b60008060006060848603121562002f5b5762002f5a62002bd8565b5b600062002f6b8682870162002d8f565b935050602062002f7e8682870162002cca565b925050604062002f918682870162002d8f565b9150509250925092565b6000806040838503121562002fb55762002fb462002bd8565b5b600062002fc58582860162002d8f565b925050602062002fd88582860162002cca565b9150509250929050565b6003811062002ff057600080fd5b50565b600081359050620030048162002fe2565b92915050565b600060ff82169050919050565b62003022816200300a565b81146200302e57600080fd5b50565b600081359050620030428162003017565b92915050565b600080600080600080600080610100898b0312156200306c576200306b62002bd8565b5b60006200307c8b828c0162002ff3565b98505060206200308f8b828c0162002cca565b9750506040620030a28b828c0162002d8f565b9650506060620030b58b828c0162002d8f565b9550506080620030c88b828c0162002cca565b94505060a0620030db8b828c0162003031565b93505060c0620030ee8b828c0162002e11565b92505060e0620031018b828c0162002e11565b9150509295985092959890939650565b600082825260208201905092915050565b7f696e76616c696420746f6b656e00000000000000000000000000000000000000600082015250565b60006200315a600d8362003111565b9150620031678262003122565b602082019050919050565b600060208201905081810360008301526200318d816200314b565b9050919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000620031f2602f8362003111565b9150620031ff8262003194565b604082019050919050565b600060208201905081810360008301526200322581620031e3565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600062003264601f8362003111565b915062003271826200322c565b602082019050919050565b60006020820190508181036000830152620032978162003255565b9050919050565b600081519050620032af8162002cb0565b92915050565b600060208284031215620032ce57620032cd62002bd8565b5b6000620032de848285016200329e565b91505092915050565b7f6e6f7420656e6f7567682062616c616e63650000000000000000000000000000600082015250565b60006200331f60128362003111565b91506200332c82620032e7565b602082019050919050565b60006020820190508181036000830152620033528162003310565b9050919050565b600060408201905062003370600083018562002d47565b6200337f602083018462002f01565b9392505050565b620033918162002c6c565b81146200339d57600080fd5b50565b600081519050620033b18162003386565b92915050565b600060208284031215620033d057620033cf62002bd8565b5b6000620033e084828501620033a0565b91505092915050565b7f7769746864726177206661696c65640000000000000000000000000000000000600082015250565b600062003421600f8362003111565b91506200342e82620033e9565b602082019050919050565b60006020820190508181036000830152620034548162003412565b9050919050565b600060208201905062003472600083018462002f01565b92915050565b7f6e6f742061636365707461626c6520746f6b656e000000000000000000000000600082015250565b6000620034b060148362003111565b9150620034bd8262003478565b602082019050919050565b60006020820190508181036000830152620034e381620034a1565b9050919050565b7f6e6f742072657665727365206f70657261746f72000000000000000000000000600082015250565b60006200352260148362003111565b91506200352f82620034ea565b602082019050919050565b60006020820190508181036000830152620035558162003513565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f746f6b656e5265636569766572206d7573742062652073657400000000000000600082015250565b6000620035c360198362003111565b9150620035d0826200358b565b602082019050919050565b60006020820190508181036000830152620035f681620035b4565b9050919050565b620036088162002ca6565b82525050565b620036198162002d33565b82525050565b604082016000820151620036376000850182620035fd565b5060208201516200364c60208501826200360e565b50505050565b600060c08201905062003669600083018762002d47565b62003678602083018662002d47565b6200368760408301856200361f565b6200369660808301846200361f565b95945050505050565b600081519050919050565b600081905092915050565b60005b83811015620036d5578082015181840152602081019050620036b8565b60008484015250505050565b6000620036ee826200369f565b620036fa8185620036aa565b93506200370c818560208601620036b5565b80840191505092915050565b6000620037268285620036e1565b9150620037348284620036e1565b91508190509392505050565b600060608201905062003757600083018662002d47565b62003766602083018562002f01565b62003775604083018462002f01565b949350505050565b600381106200379157620037906200355c565b5b50565b6000819050620037a4826200377d565b919050565b6000620037b68262003794565b9050919050565b620037c881620037a9565b82525050565b6000606082019050620037e56000830186620037bd565b620037f4602083018562002f01565b62003803604083018462002d47565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b62003845816200300a565b82525050565b600060e08201905062003862600083018a62002d47565b62003871602083018962002d47565b62003880604083018862002f01565b6200388f606083018762002f01565b6200389e60808301866200383a565b620038ad60a083018562002e5a565b620038bc60c083018462002e5a565b98975050505050505050565b6000606082019050620038df600083018662002d47565b620038ee602083018562002d47565b620038fd604083018462002f01565b949350505050565b7f666565207061796d656e74206661696c65640000000000000000000000000000600082015250565b60006200393d60128362003111565b91506200394a8262003905565b602082019050919050565b6000602082019050818103600083015262003970816200392e565b9050919050565b7f437265617465323a20696e73756666696369656e742062616c616e6365000000600082015250565b6000620039af601d8362003111565b9150620039bc8262003977565b602082019050919050565b60006020820190508181036000830152620039e281620039a0565b9050919050565b7f437265617465323a2062797465636f6465206c656e677468206973207a65726f600082015250565b600062003a2160208362003111565b915062003a2e82620039e9565b602082019050919050565b6000602082019050818103600083015262003a548162003a12565b9050919050565b7f437265617465323a204661696c6564206f6e206465706c6f7900000000000000600082015250565b600062003a9360198362003111565b915062003aa08262003a5b565b602082019050919050565b6000602082019050818103600083015262003ac68162003a84565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600062003b1060178362003acd565b915062003b1d8262003ad8565b601782019050919050565b600081519050919050565b600062003b408262003b28565b62003b4c818562003acd565b935062003b5e818560208601620036b5565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b600062003ba260118362003acd565b915062003baf8262003b6a565b601182019050919050565b600062003bc78262003b01565b915062003bd5828562003b33565b915062003be28262003b93565b915062003bf0828462003b33565b91508190509392505050565b6000601f19601f8301169050919050565b600062003c1a8262003b28565b62003c26818562003111565b935062003c38818560208601620036b5565b62003c438162003bfc565b840191505092915050565b6000602082019050818103600083015262003c6a818462003c0d565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062003cae8262002ca6565b915062003cbb8362002ca6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562003cf75762003cf662003c72565b5b828202905092915050565b600062003d0f8262002ca6565b915062003d1c8362002ca6565b925082820190508082111562003d375762003d3662003c72565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600062003d798262002ca6565b91506000820362003d8f5762003d8e62003c72565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600062003dd260208362003111565b915062003ddf8262003d9a565b602082019050919050565b6000602082019050818103600083015262003e058162003dc3565b905091905056fe60a06040523480156200001157600080fd5b5060405162004b6c38038062004b6c833981810160405281019062000037919062000697565b82600180819055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506000600260006101000a81548160ff02191690831515021790555033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001027fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42856200027060201b60201c565b620001347f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c856200027060201b60201c565b620001667fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42806200036160201b60201c565b620001b87f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec426200036160201b60201c565b8160036000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508060056000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050505062000709565b620002828282620003c460201b60201c565b6200035d57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620003026200042e60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600062000374836200044a60201b60201c565b905081600080858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000620004456200046960201b62002a881760201c565b905090565b6000806000838152602001908152602001600020600101549050919050565b60006200047c33620004b360201b60201c565b156200049257601436033560601c9050620004af565b620004a7620004ed60201b62002aba1760201c565b9050620004b0565b5b90565b600060805173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600033905090565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005318262000504565b9050919050565b620005438162000524565b81146200054f57600080fd5b50565b600081519050620005638162000538565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005b9826200056e565b810181811067ffffffffffffffff82111715620005db57620005da6200057f565b5b80604052505050565b6000620005f0620004f5565b9050620005fe8282620005ae565b919050565b6000819050919050565b620006188162000603565b81146200062457600080fd5b50565b60008151905062000638816200060d565b92915050565b60006040828403121562000657576200065662000569565b5b620006636040620005e4565b90506000620006758482850162000627565b60008301525060206200068b8482850162000552565b60208301525092915050565b60008060008060c08587031215620006b457620006b3620004ff565b5b6000620006c48782880162000552565b9450506020620006d78782880162000552565b9350506040620006ea878288016200063e565b9250506080620006fd878288016200063e565b91505092959194509250565b608051614447620007256000396000610fc301526144476000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638456cb5911610104578063a3fe6fcb116100a2578063e348da1311610071578063e348da13146104f8578063ef573bba14610514578063f273e32314610530578063f6be3c2c1461054c576101cf565b8063a3fe6fcb14610481578063c1e3d26b1461049f578063c45a0155146104be578063d547741f146104dc576101cf565b8063983d2737116100de578063983d27371461040b57806398f7f55e14610429578063a217fddf14610445578063a3e295bc14610463576101cf565b80638456cb59146103a1578063892830f4146103ab57806391d14854146103db576101cf565b806345d335e3116101715780635c975abb1161014b5780635c975abb1461032c57806361e41e281461034a57806369328dec14610366578063758cdcf014610382576101cf565b806345d335e3146102c4578063572b6c05146102e057806358f2c09714610310576101cf565b80632a0acc6a116101ad5780632a0acc6a146102525780632f2ff15d1461027057806335ad36cf1461028c57806336568abe146102a8576101cf565b806301ffc9a7146101d45780630373c90914610204578063248a9ca314610222575b600080fd5b6101ee60048036038101906101e991906131c1565b610568565b6040516101fb9190613209565b60405180910390f35b61020c6105e2565b604051610219919061323d565b60405180910390f35b61023c6004803603810190610237919061328e565b6105e8565b60405161024991906132ca565b60405180910390f35b61025a610607565b60405161026791906132ca565b60405180910390f35b61028a60048036038101906102859190613343565b61062b565b005b6102a660048036038101906102a191906133e8565b61064c565b005b6102c260048036038101906102bd9190613343565b610dd9565b005b6102de60048036038101906102d9919061348a565b610e5c565b005b6102fa60048036038101906102f591906134ca565b610fbf565b6040516103079190613209565b60405180910390f35b61032a6004803603810190610325919061351c565b611017565b005b61033461140f565b6040516103419190613209565b60405180910390f35b610364600480360381019061035f91906135be565b611426565b005b610380600480360381019061037b91906135eb565b611508565b005b61038a611657565b60405161039892919061364d565b60405180910390f35b6103a9611689565b005b6103c560048036038101906103c09190613676565b611723565b6040516103d29190613209565b60405180910390f35b6103f560048036038101906103f09190613343565b61175f565b6040516104029190613209565b60405180910390f35b6104136117c9565b60405161042091906132ca565b60405180910390f35b610443600480360381019061043e91906136c9565b6117ed565b005b61044d6118dd565b60405161045a91906132ca565b60405180910390f35b61046b6118e4565b604051610478919061371c565b60405180910390f35b61048961190a565b60405161049691906137ae565b60405180910390f35b6104a761191d565b6040516104b592919061364d565b60405180910390f35b6104c661194f565b6040516104d3919061371c565b60405180910390f35b6104f660048036038101906104f19190613343565b611975565b005b610512600480360381019061050d91906134ca565b611996565b005b61052e6004803603810190610529919061348a565b6119f6565b005b61054a600480360381019061054591906133e8565b611b47565b005b610566600480360381019061056191906133e8565b6122a5565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105db57506105da82612ac2565b5b9050919050565b60075481565b6000806000838152602001908152602001600020600101549050919050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b610634826105e8565b61063d81612b2c565b6106478383612b40565b505050565b610654612c20565b600060f81b8560006020811061066d5761066c6137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036106bc577f44454641554c545f435553544f4d5f494400000000000000000000000000000094505b8673ffffffffffffffffffffffffffffffffffffffff166301ffc9a76380ac58cd60e01b6040518263ffffffff1660e01b81526004016106fc9190613807565b602060405180830381865afa158015610719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073d919061384e565b61077c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610773906138d8565b60405180910390fd5b600160028111156107905761078f613737565b5b600860009054906101000a900460ff1660028111156107b2576107b1613737565b5b146107f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e990613944565b60405180910390fd5b600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600086815260200190815260200160002060009054906101000a900460ff16156108a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610898906139b0565b60405180910390fd5b6001600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff02191690831515021790555060008414158015610930575060008360ff1614155b80156109795750600060f81b826000602081106109505761094f6137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b80156109c25750600060f81b81600060208110610999576109986137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b15610a6657600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf3330600754888888886040518863ffffffff1660e01b8152600401610a3397969594939291906139df565b600060405180830381600087803b158015610a4d57600080fd5b505af1158015610a61573d6000803e3d6000fd5b505050505b6000600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306007546040518463ffffffff1660e01b8152600401610acc93929190613a4e565b6020604051808303816000875af1158015610aeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0f919061384e565b905080610b51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4890613ad1565b60405180910390fd5b600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3f006746040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c239190613b06565b6005600001546040518363ffffffff1660e01b8152600401610c46929190613b33565b6020604051808303816000875af1158015610c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c89919061384e565b905080610ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc290613ba8565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff166342842e0e610cef612c6a565b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a6040518463ffffffff1660e01b8152600401610d3193929190613a4e565b600060405180830381600087803b158015610d4b57600080fd5b505af1158015610d5f573d6000803e3d6000fd5b5050505060016002811115610d7757610d76613737565b5b878973ffffffffffffffffffffffffffffffffffffffff167f6a694edf7fb728c1b38ab129b298edb240d668a775d77af8305d1b1b6923d1ba610db8612c6a565b8a604051610dc7929190613bc8565b60405180910390a45050505050505050565b610de1612c6a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4590613c63565b60405180910390fd5b610e588282612c79565b5050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610eec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee390613ccf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5290613d3b565b60405180910390fd5b8160056000018190555080600560010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600754821115610fbb57816007819055505b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c61104181612b2c565b611049612c20565b6001600281111561105d5761105c613737565b5b8860028111156110705761106f613737565b5b036110e557600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036110e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110db90613da7565b60405180910390fd5b5b60056000015487101561112d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112490613e39565b60405180910390fd5b611138888888612d5a565b6000851415801561114d575060008460ff1614155b80156111965750600060f81b8360006020811061116d5761116c6137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b80156111df5750600060f81b826000602081106111b6576111b56137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b1561128657600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf3330600360000154898989896040518863ffffffff1660e01b815260040161125397969594939291906139df565b600060405180830381600087803b15801561126d57600080fd5b505af1158015611281573d6000803e3d6000fd5b505050505b6000600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3f006746040518163ffffffff1660e01b8152600401602060405180830381865afa158015611337573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135b9190613b06565b6003600001546040518463ffffffff1660e01b815260040161137f93929190613a4e565b6020604051808303816000875af115801561139e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c2919061384e565b905080611404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113fb90613ad1565b60405180910390fd5b505050505050505050565b6000600260009054906101000a900460ff16905090565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ad90613ccf565b60405180910390fd5b6005600001548110156114fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f590613e39565b60405180910390fd5b8060078190555050565b60026001540361154d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154490613ea5565b60405180910390fd5b60026001819055507fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4261157f81612b2c565b611587612c20565b60008473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b81526004016115c4929190613b33565b6020604051808303816000875af11580156115e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611607919061384e565b905080611649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164090613f11565b60405180910390fd5b505060018081905550505050565b60038060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171090613ccf565b60405180910390fd5b611721612e28565b565b6009602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c81565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461187d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187490613ccf565b60405180910390fd5b611885612c20565b6005600001548210156118cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c490613e39565b60405180910390fd5b6118d8838383612d5a565b505050565b6000801b81565b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900460ff1681565b60058060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61197e826105e8565b61198781612b2c565b6119918383612c79565b505050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec426119c081612b2c565b6119c8612c20565b6119f27f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c8361062b565b5050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7d90613ccf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611af5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aec90613d3b565b60405180910390fd5b8160036000018190555080600360010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b611b4f612c20565b600060f81b85600060208110611b6857611b676137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603611bb7577f44454641554c545f435553544f4d5f494400000000000000000000000000000094505b8673ffffffffffffffffffffffffffffffffffffffff166301ffc9a76380ac58cd60e01b6040518263ffffffff1660e01b8152600401611bf79190613807565b602060405180830381865afa158015611c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c38919061384e565b611c77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6e906138d8565b60405180910390fd5b600280811115611c8a57611c89613737565b5b600860009054906101000a900460ff166002811115611cac57611cab613737565b5b14611cec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ce390613f7d565b60405180910390fd5b600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600086815260200190815260200160002060009054906101000a900460ff1615611d9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d92906139b0565b60405180910390fd5b6001600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff02191690831515021790555060008414158015611e2a575060008360ff1614155b8015611e735750600060f81b82600060208110611e4a57611e496137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b8015611ebc5750600060f81b81600060208110611e9357611e926137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b15611f6057600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf3330600754888888886040518863ffffffff1660e01b8152600401611f2d97969594939291906139df565b600060405180830381600087803b158015611f4757600080fd5b505af1158015611f5b573d6000803e3d6000fd5b505050505b6000600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306007546040518463ffffffff1660e01b8152600401611fc693929190613a4e565b6020604051808303816000875af1158015611fe5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612009919061384e565b90508061204b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204290613ad1565b60405180910390fd5b600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3f006746040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061211d9190613b06565b6005600001546040518363ffffffff1660e01b8152600401612140929190613b33565b6020604051808303816000875af115801561215f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612183919061384e565b9050806121c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121bc90613ba8565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff166342966c68886040518263ffffffff1660e01b81526004016121fe919061323d565b600060405180830381600087803b15801561221857600080fd5b505af115801561222c573d6000803e3d6000fd5b5050505060028081111561224357612242613737565b5b878973ffffffffffffffffffffffffffffffffffffffff167f6a694edf7fb728c1b38ab129b298edb240d668a775d77af8305d1b1b6923d1ba612284612c6a565b8a604051612293929190613bc8565b60405180910390a45050505050505050565b6122ad612c20565b600060f81b856000602081106122c6576122c56137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603612315577f44454641554c545f435553544f4d5f494400000000000000000000000000000094505b8673ffffffffffffffffffffffffffffffffffffffff166301ffc9a76380ac58cd60e01b6040518263ffffffff1660e01b81526004016123559190613807565b602060405180830381865afa158015612372573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612396919061384e565b6123d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123cc906138d8565b60405180910390fd5b600060028111156123e9576123e8613737565b5b600860009054906101000a900460ff16600281111561240b5761240a613737565b5b1461244b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161244290613fe9565b60405180910390fd5b600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600086815260200190815260200160002060009054906101000a900460ff16156124fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124f1906139b0565b60405180910390fd5b612502612c6a565b73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16636352211e886040518263ffffffff1660e01b8152600401612551919061323d565b602060405180830381865afa15801561256e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125929190613b06565b73ffffffffffffffffffffffffffffffffffffffff16146125e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125df90614055565b60405180910390fd5b6001600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff02191690831515021790555060008414158015612677575060008360ff1614155b80156126c05750600060f81b82600060208110612697576126966137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b80156127095750600060f81b816000602081106126e0576126df6137c9565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b156127ad57600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf3330600754888888886040518863ffffffff1660e01b815260040161277a97969594939291906139df565b600060405180830381600087803b15801561279457600080fd5b505af11580156127a8573d6000803e3d6000fd5b505050505b6000600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306007546040518463ffffffff1660e01b815260040161281393929190613a4e565b6020604051808303816000875af1158015612832573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612856919061384e565b905080612898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161288f90613ad1565b60405180910390fd5b600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3f006746040518163ffffffff1660e01b8152600401602060405180830381865afa158015612946573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061296a9190613b06565b6005600001546040518363ffffffff1660e01b815260040161298d929190613b33565b6020604051808303816000875af11580156129ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129d0919061384e565b905080612a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a0990613ba8565b60405180910390fd5b60006002811115612a2657612a25613737565b5b878973ffffffffffffffffffffffffffffffffffffffff167f6a694edf7fb728c1b38ab129b298edb240d668a775d77af8305d1b1b6923d1ba612a67612c6a565b8a604051612a76929190613bc8565b60405180910390a45050505050505050565b6000612a9333610fbf565b15612aa757601436033560601c9050612ab6565b612aaf612aba565b9050612ab7565b5b90565b600033905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b612b3d81612b38612c6a565b612e8b565b50565b612b4a828261175f565b612c1c57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612bc1612c6a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b612c2861140f565b15612c68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c5f906140c1565b60405180910390fd5b565b6000612c74612a88565b905090565b612c83828261175f565b15612d5657600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612cfb612c6a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b82600860006101000a81548160ff02191690836002811115612d7f57612d7e613737565b5b02179055508160078190555080600860016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16836002811115612df657612df5613737565b5b837f79a6ccfd52698aa33bd8cc221b2a5121a21ff610b21e3ca09051eaba3d9d269460405160405180910390a4505050565b612e30612c20565b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612e74612c6a565b604051612e81919061371c565b60405180910390a1565b612e95828261175f565b612f2457612eba8173ffffffffffffffffffffffffffffffffffffffff166014612f28565b612ec88360001c6020612f28565b604051602001612ed99291906141ea565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f1b919061426e565b60405180910390fd5b5050565b606060006002836002612f3b91906142bf565b612f459190614319565b67ffffffffffffffff811115612f5e57612f5d61434d565b5b6040519080825280601f01601f191660200182016040528015612f905781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612fc857612fc76137c9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061302c5761302b6137c9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261306c91906142bf565b6130769190614319565b90505b6001811115613116577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106130b8576130b76137c9565b5b1a60f81b8282815181106130cf576130ce6137c9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061310f9061437c565b9050613079565b506000841461315a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613151906143f1565b60405180910390fd5b8091505092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61319e81613169565b81146131a957600080fd5b50565b6000813590506131bb81613195565b92915050565b6000602082840312156131d7576131d6613164565b5b60006131e5848285016131ac565b91505092915050565b60008115159050919050565b613203816131ee565b82525050565b600060208201905061321e60008301846131fa565b92915050565b6000819050919050565b61323781613224565b82525050565b6000602082019050613252600083018461322e565b92915050565b6000819050919050565b61326b81613258565b811461327657600080fd5b50565b60008135905061328881613262565b92915050565b6000602082840312156132a4576132a3613164565b5b60006132b284828501613279565b91505092915050565b6132c481613258565b82525050565b60006020820190506132df60008301846132bb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613310826132e5565b9050919050565b61332081613305565b811461332b57600080fd5b50565b60008135905061333d81613317565b92915050565b6000806040838503121561335a57613359613164565b5b600061336885828601613279565b92505060206133798582860161332e565b9150509250929050565b61338c81613224565b811461339757600080fd5b50565b6000813590506133a981613383565b92915050565b600060ff82169050919050565b6133c5816133af565b81146133d057600080fd5b50565b6000813590506133e2816133bc565b92915050565b600080600080600080600060e0888a03121561340757613406613164565b5b60006134158a828b0161332e565b97505060206134268a828b0161339a565b96505060406134378a828b01613279565b95505060606134488a828b0161339a565b94505060806134598a828b016133d3565b93505060a061346a8a828b01613279565b92505060c061347b8a828b01613279565b91505092959891949750929550565b600080604083850312156134a1576134a0613164565b5b60006134af8582860161339a565b92505060206134c08582860161332e565b9150509250929050565b6000602082840312156134e0576134df613164565b5b60006134ee8482850161332e565b91505092915050565b6003811061350457600080fd5b50565b600081359050613516816134f7565b92915050565b600080600080600080600060e0888a03121561353b5761353a613164565b5b60006135498a828b01613507565b975050602061355a8a828b0161339a565b965050604061356b8a828b0161332e565b955050606061357c8a828b0161339a565b945050608061358d8a828b016133d3565b93505060a061359e8a828b01613279565b92505060c06135af8a828b01613279565b91505092959891949750929550565b6000602082840312156135d4576135d3613164565b5b60006135e28482850161339a565b91505092915050565b60008060006060848603121561360457613603613164565b5b60006136128682870161332e565b93505060206136238682870161339a565b92505060406136348682870161332e565b9150509250925092565b61364781613305565b82525050565b6000604082019050613662600083018561322e565b61366f602083018461363e565b9392505050565b60008060006060848603121561368f5761368e613164565b5b600061369d8682870161332e565b93505060206136ae8682870161339a565b92505060406136bf86828701613279565b9150509250925092565b6000806000606084860312156136e2576136e1613164565b5b60006136f086828701613507565b93505060206137018682870161339a565b92505060406137128682870161332e565b9150509250925092565b6000602082019050613731600083018461363e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061377757613776613737565b5b50565b600081905061378882613766565b919050565b60006137988261377a565b9050919050565b6137a88161378d565b82525050565b60006020820190506137c3600083018461379f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61380181613169565b82525050565b600060208201905061381c60008301846137f8565b92915050565b61382b816131ee565b811461383657600080fd5b50565b60008151905061384881613822565b92915050565b60006020828403121561386457613863613164565b5b600061387284828501613839565b91505092915050565b600082825260208201905092915050565b7f6e6f742045524337323120746f6b656e00000000000000000000000000000000600082015250565b60006138c260108361387b565b91506138cd8261388c565b602082019050919050565b600060208201905081810360008301526138f1816138b5565b9050919050565b7f6d6574686f64206973206e6f74207472616e7366657200000000000000000000600082015250565b600061392e60168361387b565b9150613939826138f8565b602082019050919050565b6000602082019050818103600083015261395d81613921565b9050919050565b7f746f6b656e20686173206265656e2072656465656d6564000000000000000000600082015250565b600061399a60178361387b565b91506139a582613964565b602082019050919050565b600060208201905081810360008301526139c98161398d565b9050919050565b6139d9816133af565b82525050565b600060e0820190506139f4600083018a61363e565b613a01602083018961363e565b613a0e604083018861322e565b613a1b606083018761322e565b613a2860808301866139d0565b613a3560a08301856132bb565b613a4260c08301846132bb565b98975050505050505050565b6000606082019050613a63600083018661363e565b613a70602083018561363e565b613a7d604083018461322e565b949350505050565b7f666565207061796d656e74206661696c65640000000000000000000000000000600082015250565b6000613abb60128361387b565b9150613ac682613a85565b602082019050919050565b60006020820190508181036000830152613aea81613aae565b9050919050565b600081519050613b0081613317565b92915050565b600060208284031215613b1c57613b1b613164565b5b6000613b2a84828501613af1565b91505092915050565b6000604082019050613b48600083018561363e565b613b55602083018461322e565b9392505050565b7f626173652072656465656d20666565207061796d656e74206661696c65640000600082015250565b6000613b92601e8361387b565b9150613b9d82613b5c565b602082019050919050565b60006020820190508181036000830152613bc181613b85565b9050919050565b6000604082019050613bdd600083018561363e565b613bea60208301846132bb565b9392505050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000613c4d602f8361387b565b9150613c5882613bf1565b604082019050919050565b60006020820190508181036000830152613c7c81613c40565b9050919050565b7f6f6e6c7920666163746f72790000000000000000000000000000000000000000600082015250565b6000613cb9600c8361387b565b9150613cc482613c83565b602082019050919050565b60006020820190508181036000830152613ce881613cac565b9050919050565b7f696e76616c696420746f6b656e00000000000000000000000000000000000000600082015250565b6000613d25600d8361387b565b9150613d3082613cef565b602082019050919050565b60006020820190508181036000830152613d5481613d18565b9050919050565b7f746f6b656e5265636569766572206d7573742062652073657400000000000000600082015250565b6000613d9160198361387b565b9150613d9c82613d5b565b602082019050919050565b60006020820190508181036000830152613dc081613d84565b9050919050565b7f72656465656d416d6f756e74206d75737420626520677265617465722074686160008201527f6e206261736552656465656d4665650000000000000000000000000000000000602082015250565b6000613e23602f8361387b565b9150613e2e82613dc7565b604082019050919050565b60006020820190508181036000830152613e5281613e16565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613e8f601f8361387b565b9150613e9a82613e59565b602082019050919050565b60006020820190508181036000830152613ebe81613e82565b9050919050565b7f7769746864726177206661696c65640000000000000000000000000000000000600082015250565b6000613efb600f8361387b565b9150613f0682613ec5565b602082019050919050565b60006020820190508181036000830152613f2a81613eee565b9050919050565b7f6d6574686f64206973206e6f74206275726e0000000000000000000000000000600082015250565b6000613f6760128361387b565b9150613f7282613f31565b602082019050919050565b60006020820190508181036000830152613f9681613f5a565b9050919050565b7f6d6574686f64206973206e6f74206d61726b0000000000000000000000000000600082015250565b6000613fd360128361387b565b9150613fde82613f9d565b602082019050919050565b6000602082019050818103600083015261400281613fc6565b9050919050565b7f6e6f7420746f6b656e206f776e65720000000000000000000000000000000000600082015250565b600061403f600f8361387b565b915061404a82614009565b602082019050919050565b6000602082019050818103600083015261406e81614032565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006140ab60108361387b565b91506140b682614075565b602082019050919050565b600060208201905081810360008301526140da8161409e565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006141226017836140e1565b915061412d826140ec565b601782019050919050565b600081519050919050565b60005b83811015614161578082015181840152602081019050614146565b60008484015250505050565b600061417882614138565b61418281856140e1565b9350614192818560208601614143565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006141d46011836140e1565b91506141df8261419e565b601182019050919050565b60006141f582614115565b9150614201828561416d565b915061420c826141c7565b9150614218828461416d565b91508190509392505050565b6000601f19601f8301169050919050565b600061424082614138565b61424a818561387b565b935061425a818560208601614143565b61426381614224565b840191505092915050565b600060208201905081810360008301526142888184614235565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006142ca82613224565b91506142d583613224565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561430e5761430d614290565b5b828202905092915050565b600061432482613224565b915061432f83613224565b925082820190508082111561434757614346614290565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061438782613224565b91506000820361439a57614399614290565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006143db60208361387b565b91506143e6826143a5565b602082019050919050565b6000602082019050818103600083015261440a816143ce565b905091905056fea2646970667358221220672126a840d807e5f361ad7c4a2f6075f995f725a0113c0c633b8fdd5015e8ae64736f6c63430008100033a26469706673582212200832407e3315471e88bea8c47aa61418a7b7b544f189b6f44908db1b91e4962e64736f6c63430008100033",
}

// RedeemprotocolfactoryABI is the input ABI used to generate the binding from.
// Deprecated: Use RedeemprotocolfactoryMetaData.ABI instead.
var RedeemprotocolfactoryABI = RedeemprotocolfactoryMetaData.ABI

// RedeemprotocolfactoryBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use RedeemprotocolfactoryMetaData.Bin instead.
var RedeemprotocolfactoryBin = RedeemprotocolfactoryMetaData.Bin

// DeployRedeemprotocolfactory deploys a new Ethereum contract, binding an instance of Redeemprotocolfactory to it.
func DeployRedeemprotocolfactory(auth *bind.TransactOpts, backend bind.ContractBackend, _defaultSetupFee RedeemProtocolTypeFee, _defaultUpdateFee RedeemProtocolTypeFee, _defaultBaseRedeemFee RedeemProtocolTypeFee, _feeReceiver common.Address) (common.Address, *types.Transaction, *Redeemprotocolfactory, error) {
	parsed, err := RedeemprotocolfactoryMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(RedeemprotocolfactoryBin), backend, _defaultSetupFee, _defaultUpdateFee, _defaultBaseRedeemFee, _feeReceiver)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Redeemprotocolfactory{RedeemprotocolfactoryCaller: RedeemprotocolfactoryCaller{contract: contract}, RedeemprotocolfactoryTransactor: RedeemprotocolfactoryTransactor{contract: contract}, RedeemprotocolfactoryFilterer: RedeemprotocolfactoryFilterer{contract: contract}}, nil
}

// Redeemprotocolfactory is an auto generated Go binding around an Ethereum contract.
type Redeemprotocolfactory struct {
	RedeemprotocolfactoryCaller     // Read-only binding to the contract
	RedeemprotocolfactoryTransactor // Write-only binding to the contract
	RedeemprotocolfactoryFilterer   // Log filterer for contract events
}

// RedeemprotocolfactoryCaller is an auto generated read-only Go binding around an Ethereum contract.
type RedeemprotocolfactoryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RedeemprotocolfactoryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RedeemprotocolfactoryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RedeemprotocolfactoryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RedeemprotocolfactoryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RedeemprotocolfactorySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RedeemprotocolfactorySession struct {
	Contract     *Redeemprotocolfactory // Generic contract binding to set the session for
	CallOpts     bind.CallOpts          // Call options to use throughout this session
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// RedeemprotocolfactoryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RedeemprotocolfactoryCallerSession struct {
	Contract *RedeemprotocolfactoryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                // Call options to use throughout this session
}

// RedeemprotocolfactoryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RedeemprotocolfactoryTransactorSession struct {
	Contract     *RedeemprotocolfactoryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                // Transaction auth options to use throughout this session
}

// RedeemprotocolfactoryRaw is an auto generated low-level Go binding around an Ethereum contract.
type RedeemprotocolfactoryRaw struct {
	Contract *Redeemprotocolfactory // Generic contract binding to access the raw methods on
}

// RedeemprotocolfactoryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RedeemprotocolfactoryCallerRaw struct {
	Contract *RedeemprotocolfactoryCaller // Generic read-only contract binding to access the raw methods on
}

// RedeemprotocolfactoryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RedeemprotocolfactoryTransactorRaw struct {
	Contract *RedeemprotocolfactoryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRedeemprotocolfactory creates a new instance of Redeemprotocolfactory, bound to a specific deployed contract.
func NewRedeemprotocolfactory(address common.Address, backend bind.ContractBackend) (*Redeemprotocolfactory, error) {
	contract, err := bindRedeemprotocolfactory(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Redeemprotocolfactory{RedeemprotocolfactoryCaller: RedeemprotocolfactoryCaller{contract: contract}, RedeemprotocolfactoryTransactor: RedeemprotocolfactoryTransactor{contract: contract}, RedeemprotocolfactoryFilterer: RedeemprotocolfactoryFilterer{contract: contract}}, nil
}

// NewRedeemprotocolfactoryCaller creates a new read-only instance of Redeemprotocolfactory, bound to a specific deployed contract.
func NewRedeemprotocolfactoryCaller(address common.Address, caller bind.ContractCaller) (*RedeemprotocolfactoryCaller, error) {
	contract, err := bindRedeemprotocolfactory(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolfactoryCaller{contract: contract}, nil
}

// NewRedeemprotocolfactoryTransactor creates a new write-only instance of Redeemprotocolfactory, bound to a specific deployed contract.
func NewRedeemprotocolfactoryTransactor(address common.Address, transactor bind.ContractTransactor) (*RedeemprotocolfactoryTransactor, error) {
	contract, err := bindRedeemprotocolfactory(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolfactoryTransactor{contract: contract}, nil
}

// NewRedeemprotocolfactoryFilterer creates a new log filterer instance of Redeemprotocolfactory, bound to a specific deployed contract.
func NewRedeemprotocolfactoryFilterer(address common.Address, filterer bind.ContractFilterer) (*RedeemprotocolfactoryFilterer, error) {
	contract, err := bindRedeemprotocolfactory(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolfactoryFilterer{contract: contract}, nil
}

// bindRedeemprotocolfactory binds a generic wrapper to an already deployed contract.
func bindRedeemprotocolfactory(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RedeemprotocolfactoryABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Redeemprotocolfactory *RedeemprotocolfactoryRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Redeemprotocolfactory.Contract.RedeemprotocolfactoryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Redeemprotocolfactory *RedeemprotocolfactoryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.RedeemprotocolfactoryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Redeemprotocolfactory *RedeemprotocolfactoryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.RedeemprotocolfactoryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Redeemprotocolfactory.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.contract.Transact(opts, method, params...)
}

// ADMIN is a free data retrieval call binding the contract method 0x2a0acc6a.
//
// Solidity: function ADMIN() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) ADMIN(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "ADMIN")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ADMIN is a free data retrieval call binding the contract method 0x2a0acc6a.
//
// Solidity: function ADMIN() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) ADMIN() ([32]byte, error) {
	return _Redeemprotocolfactory.Contract.ADMIN(&_Redeemprotocolfactory.CallOpts)
}

// ADMIN is a free data retrieval call binding the contract method 0x2a0acc6a.
//
// Solidity: function ADMIN() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) ADMIN() ([32]byte, error) {
	return _Redeemprotocolfactory.Contract.ADMIN(&_Redeemprotocolfactory.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) DEFAULTADMINROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "DEFAULT_ADMIN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) DEFAULTADMINROLE() ([32]byte, error) {
	return _Redeemprotocolfactory.Contract.DEFAULTADMINROLE(&_Redeemprotocolfactory.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _Redeemprotocolfactory.Contract.DEFAULTADMINROLE(&_Redeemprotocolfactory.CallOpts)
}

// OPERATOR is a free data retrieval call binding the contract method 0x983d2737.
//
// Solidity: function OPERATOR() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) OPERATOR(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "OPERATOR")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// OPERATOR is a free data retrieval call binding the contract method 0x983d2737.
//
// Solidity: function OPERATOR() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) OPERATOR() ([32]byte, error) {
	return _Redeemprotocolfactory.Contract.OPERATOR(&_Redeemprotocolfactory.CallOpts)
}

// OPERATOR is a free data retrieval call binding the contract method 0x983d2737.
//
// Solidity: function OPERATOR() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) OPERATOR() ([32]byte, error) {
	return _Redeemprotocolfactory.Contract.OPERATOR(&_Redeemprotocolfactory.CallOpts)
}

// REVERSECREATOR is a free data retrieval call binding the contract method 0xb0255ab2.
//
// Solidity: function REVERSE_CREATOR() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) REVERSECREATOR(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "REVERSE_CREATOR")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// REVERSECREATOR is a free data retrieval call binding the contract method 0xb0255ab2.
//
// Solidity: function REVERSE_CREATOR() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) REVERSECREATOR() ([32]byte, error) {
	return _Redeemprotocolfactory.Contract.REVERSECREATOR(&_Redeemprotocolfactory.CallOpts)
}

// REVERSECREATOR is a free data retrieval call binding the contract method 0xb0255ab2.
//
// Solidity: function REVERSE_CREATOR() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) REVERSECREATOR() ([32]byte, error) {
	return _Redeemprotocolfactory.Contract.REVERSECREATOR(&_Redeemprotocolfactory.CallOpts)
}

// ROOTCREATOR is a free data retrieval call binding the contract method 0x889c8643.
//
// Solidity: function ROOT_CREATOR() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) ROOTCREATOR(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "ROOT_CREATOR")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ROOTCREATOR is a free data retrieval call binding the contract method 0x889c8643.
//
// Solidity: function ROOT_CREATOR() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) ROOTCREATOR() ([32]byte, error) {
	return _Redeemprotocolfactory.Contract.ROOTCREATOR(&_Redeemprotocolfactory.CallOpts)
}

// ROOTCREATOR is a free data retrieval call binding the contract method 0x889c8643.
//
// Solidity: function ROOT_CREATOR() view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) ROOTCREATOR() ([32]byte, error) {
	return _Redeemprotocolfactory.Contract.ROOTCREATOR(&_Redeemprotocolfactory.CallOpts)
}

// AllReverses is a free data retrieval call binding the contract method 0x10b87df8.
//
// Solidity: function allReverses(uint256 ) view returns(address)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) AllReverses(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "allReverses", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AllReverses is a free data retrieval call binding the contract method 0x10b87df8.
//
// Solidity: function allReverses(uint256 ) view returns(address)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) AllReverses(arg0 *big.Int) (common.Address, error) {
	return _Redeemprotocolfactory.Contract.AllReverses(&_Redeemprotocolfactory.CallOpts, arg0)
}

// AllReverses is a free data retrieval call binding the contract method 0x10b87df8.
//
// Solidity: function allReverses(uint256 ) view returns(address)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) AllReverses(arg0 *big.Int) (common.Address, error) {
	return _Redeemprotocolfactory.Contract.AllReverses(&_Redeemprotocolfactory.CallOpts, arg0)
}

// ApproveOnly is a free data retrieval call binding the contract method 0x60938601.
//
// Solidity: function approveOnly() view returns(bool)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) ApproveOnly(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "approveOnly")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ApproveOnly is a free data retrieval call binding the contract method 0x60938601.
//
// Solidity: function approveOnly() view returns(bool)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) ApproveOnly() (bool, error) {
	return _Redeemprotocolfactory.Contract.ApproveOnly(&_Redeemprotocolfactory.CallOpts)
}

// ApproveOnly is a free data retrieval call binding the contract method 0x60938601.
//
// Solidity: function approveOnly() view returns(bool)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) ApproveOnly() (bool, error) {
	return _Redeemprotocolfactory.Contract.ApproveOnly(&_Redeemprotocolfactory.CallOpts)
}

// DefaultBaseRedeemFee is a free data retrieval call binding the contract method 0x70bdf182.
//
// Solidity: function defaultBaseRedeemFee() view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) DefaultBaseRedeemFee(opts *bind.CallOpts) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "defaultBaseRedeemFee")

	outstruct := new(struct {
		Amount *big.Int
		Token  common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Token = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// DefaultBaseRedeemFee is a free data retrieval call binding the contract method 0x70bdf182.
//
// Solidity: function defaultBaseRedeemFee() view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) DefaultBaseRedeemFee() (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolfactory.Contract.DefaultBaseRedeemFee(&_Redeemprotocolfactory.CallOpts)
}

// DefaultBaseRedeemFee is a free data retrieval call binding the contract method 0x70bdf182.
//
// Solidity: function defaultBaseRedeemFee() view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) DefaultBaseRedeemFee() (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolfactory.Contract.DefaultBaseRedeemFee(&_Redeemprotocolfactory.CallOpts)
}

// DefaultSetupFee is a free data retrieval call binding the contract method 0x750bf9ec.
//
// Solidity: function defaultSetupFee() view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) DefaultSetupFee(opts *bind.CallOpts) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "defaultSetupFee")

	outstruct := new(struct {
		Amount *big.Int
		Token  common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Token = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// DefaultSetupFee is a free data retrieval call binding the contract method 0x750bf9ec.
//
// Solidity: function defaultSetupFee() view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) DefaultSetupFee() (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolfactory.Contract.DefaultSetupFee(&_Redeemprotocolfactory.CallOpts)
}

// DefaultSetupFee is a free data retrieval call binding the contract method 0x750bf9ec.
//
// Solidity: function defaultSetupFee() view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) DefaultSetupFee() (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolfactory.Contract.DefaultSetupFee(&_Redeemprotocolfactory.CallOpts)
}

// DefaultUpdateFee is a free data retrieval call binding the contract method 0x677ff464.
//
// Solidity: function defaultUpdateFee() view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) DefaultUpdateFee(opts *bind.CallOpts) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "defaultUpdateFee")

	outstruct := new(struct {
		Amount *big.Int
		Token  common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Token = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// DefaultUpdateFee is a free data retrieval call binding the contract method 0x677ff464.
//
// Solidity: function defaultUpdateFee() view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) DefaultUpdateFee() (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolfactory.Contract.DefaultUpdateFee(&_Redeemprotocolfactory.CallOpts)
}

// DefaultUpdateFee is a free data retrieval call binding the contract method 0x677ff464.
//
// Solidity: function defaultUpdateFee() view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) DefaultUpdateFee() (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolfactory.Contract.DefaultUpdateFee(&_Redeemprotocolfactory.CallOpts)
}

// DesignateBaseRedeemFee is a free data retrieval call binding the contract method 0x66968cd0.
//
// Solidity: function designateBaseRedeemFee(address ) view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) DesignateBaseRedeemFee(opts *bind.CallOpts, arg0 common.Address) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "designateBaseRedeemFee", arg0)

	outstruct := new(struct {
		Amount *big.Int
		Token  common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Token = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// DesignateBaseRedeemFee is a free data retrieval call binding the contract method 0x66968cd0.
//
// Solidity: function designateBaseRedeemFee(address ) view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) DesignateBaseRedeemFee(arg0 common.Address) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolfactory.Contract.DesignateBaseRedeemFee(&_Redeemprotocolfactory.CallOpts, arg0)
}

// DesignateBaseRedeemFee is a free data retrieval call binding the contract method 0x66968cd0.
//
// Solidity: function designateBaseRedeemFee(address ) view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) DesignateBaseRedeemFee(arg0 common.Address) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolfactory.Contract.DesignateBaseRedeemFee(&_Redeemprotocolfactory.CallOpts, arg0)
}

// DesignateSetupFee is a free data retrieval call binding the contract method 0x5a57f8b4.
//
// Solidity: function designateSetupFee(address ) view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) DesignateSetupFee(opts *bind.CallOpts, arg0 common.Address) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "designateSetupFee", arg0)

	outstruct := new(struct {
		Amount *big.Int
		Token  common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Token = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// DesignateSetupFee is a free data retrieval call binding the contract method 0x5a57f8b4.
//
// Solidity: function designateSetupFee(address ) view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) DesignateSetupFee(arg0 common.Address) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolfactory.Contract.DesignateSetupFee(&_Redeemprotocolfactory.CallOpts, arg0)
}

// DesignateSetupFee is a free data retrieval call binding the contract method 0x5a57f8b4.
//
// Solidity: function designateSetupFee(address ) view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) DesignateSetupFee(arg0 common.Address) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolfactory.Contract.DesignateSetupFee(&_Redeemprotocolfactory.CallOpts, arg0)
}

// DesignateUpdateFee is a free data retrieval call binding the contract method 0x389f7428.
//
// Solidity: function designateUpdateFee(address ) view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) DesignateUpdateFee(opts *bind.CallOpts, arg0 common.Address) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "designateUpdateFee", arg0)

	outstruct := new(struct {
		Amount *big.Int
		Token  common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Token = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// DesignateUpdateFee is a free data retrieval call binding the contract method 0x389f7428.
//
// Solidity: function designateUpdateFee(address ) view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) DesignateUpdateFee(arg0 common.Address) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolfactory.Contract.DesignateUpdateFee(&_Redeemprotocolfactory.CallOpts, arg0)
}

// DesignateUpdateFee is a free data retrieval call binding the contract method 0x389f7428.
//
// Solidity: function designateUpdateFee(address ) view returns(uint256 amount, address token)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) DesignateUpdateFee(arg0 common.Address) (struct {
	Amount *big.Int
	Token  common.Address
}, error) {
	return _Redeemprotocolfactory.Contract.DesignateUpdateFee(&_Redeemprotocolfactory.CallOpts, arg0)
}

// FeeReceiver is a free data retrieval call binding the contract method 0xb3f00674.
//
// Solidity: function feeReceiver() view returns(address)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) FeeReceiver(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "feeReceiver")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// FeeReceiver is a free data retrieval call binding the contract method 0xb3f00674.
//
// Solidity: function feeReceiver() view returns(address)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) FeeReceiver() (common.Address, error) {
	return _Redeemprotocolfactory.Contract.FeeReceiver(&_Redeemprotocolfactory.CallOpts)
}

// FeeReceiver is a free data retrieval call binding the contract method 0xb3f00674.
//
// Solidity: function feeReceiver() view returns(address)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) FeeReceiver() (common.Address, error) {
	return _Redeemprotocolfactory.Contract.FeeReceiver(&_Redeemprotocolfactory.CallOpts)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) GetRoleAdmin(opts *bind.CallOpts, role [32]byte) ([32]byte, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "getRoleAdmin", role)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _Redeemprotocolfactory.Contract.GetRoleAdmin(&_Redeemprotocolfactory.CallOpts, role)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _Redeemprotocolfactory.Contract.GetRoleAdmin(&_Redeemprotocolfactory.CallOpts, role)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) HasRole(opts *bind.CallOpts, role [32]byte, account common.Address) (bool, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "hasRole", role, account)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _Redeemprotocolfactory.Contract.HasRole(&_Redeemprotocolfactory.CallOpts, role, account)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _Redeemprotocolfactory.Contract.HasRole(&_Redeemprotocolfactory.CallOpts, role, account)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) SupportsInterface(opts *bind.CallOpts, interfaceId [4]byte) (bool, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "supportsInterface", interfaceId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _Redeemprotocolfactory.Contract.SupportsInterface(&_Redeemprotocolfactory.CallOpts, interfaceId)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _Redeemprotocolfactory.Contract.SupportsInterface(&_Redeemprotocolfactory.CallOpts, interfaceId)
}

// ValidRedeemToken is a free data retrieval call binding the contract method 0x5f0f1208.
//
// Solidity: function validRedeemToken(address ) view returns(bool)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCaller) ValidRedeemToken(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var out []interface{}
	err := _Redeemprotocolfactory.contract.Call(opts, &out, "validRedeemToken", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ValidRedeemToken is a free data retrieval call binding the contract method 0x5f0f1208.
//
// Solidity: function validRedeemToken(address ) view returns(bool)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) ValidRedeemToken(arg0 common.Address) (bool, error) {
	return _Redeemprotocolfactory.Contract.ValidRedeemToken(&_Redeemprotocolfactory.CallOpts, arg0)
}

// ValidRedeemToken is a free data retrieval call binding the contract method 0x5f0f1208.
//
// Solidity: function validRedeemToken(address ) view returns(bool)
func (_Redeemprotocolfactory *RedeemprotocolfactoryCallerSession) ValidRedeemToken(arg0 common.Address) (bool, error) {
	return _Redeemprotocolfactory.Contract.ValidRedeemToken(&_Redeemprotocolfactory.CallOpts, arg0)
}

// CreateReverse is a paid mutator transaction binding the contract method 0xbb1e1507.
//
// Solidity: function createReverse(uint8 _method, uint256 _redeemAmount, address _tokenReceiver, address _forwarder, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns(address reverse)
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) CreateReverse(opts *bind.TransactOpts, _method uint8, _redeemAmount *big.Int, _tokenReceiver common.Address, _forwarder common.Address, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "createReverse", _method, _redeemAmount, _tokenReceiver, _forwarder, _deadline, _v, _r, _s)
}

// CreateReverse is a paid mutator transaction binding the contract method 0xbb1e1507.
//
// Solidity: function createReverse(uint8 _method, uint256 _redeemAmount, address _tokenReceiver, address _forwarder, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns(address reverse)
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) CreateReverse(_method uint8, _redeemAmount *big.Int, _tokenReceiver common.Address, _forwarder common.Address, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.CreateReverse(&_Redeemprotocolfactory.TransactOpts, _method, _redeemAmount, _tokenReceiver, _forwarder, _deadline, _v, _r, _s)
}

// CreateReverse is a paid mutator transaction binding the contract method 0xbb1e1507.
//
// Solidity: function createReverse(uint8 _method, uint256 _redeemAmount, address _tokenReceiver, address _forwarder, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s) returns(address reverse)
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) CreateReverse(_method uint8, _redeemAmount *big.Int, _tokenReceiver common.Address, _forwarder common.Address, _deadline *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.CreateReverse(&_Redeemprotocolfactory.TransactOpts, _method, _redeemAmount, _tokenReceiver, _forwarder, _deadline, _v, _r, _s)
}

// FlipApprovedOnly is a paid mutator transaction binding the contract method 0x50983668.
//
// Solidity: function flipApprovedOnly() returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) FlipApprovedOnly(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "flipApprovedOnly")
}

// FlipApprovedOnly is a paid mutator transaction binding the contract method 0x50983668.
//
// Solidity: function flipApprovedOnly() returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) FlipApprovedOnly() (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.FlipApprovedOnly(&_Redeemprotocolfactory.TransactOpts)
}

// FlipApprovedOnly is a paid mutator transaction binding the contract method 0x50983668.
//
// Solidity: function flipApprovedOnly() returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) FlipApprovedOnly() (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.FlipApprovedOnly(&_Redeemprotocolfactory.TransactOpts)
}

// FlipValidRedeemToken is a paid mutator transaction binding the contract method 0x85df3fa0.
//
// Solidity: function flipValidRedeemToken(address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) FlipValidRedeemToken(opts *bind.TransactOpts, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "flipValidRedeemToken", _token)
}

// FlipValidRedeemToken is a paid mutator transaction binding the contract method 0x85df3fa0.
//
// Solidity: function flipValidRedeemToken(address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) FlipValidRedeemToken(_token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.FlipValidRedeemToken(&_Redeemprotocolfactory.TransactOpts, _token)
}

// FlipValidRedeemToken is a paid mutator transaction binding the contract method 0x85df3fa0.
//
// Solidity: function flipValidRedeemToken(address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) FlipValidRedeemToken(_token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.FlipValidRedeemToken(&_Redeemprotocolfactory.TransactOpts, _token)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) GrantRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "grantRole", role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.GrantRole(&_Redeemprotocolfactory.TransactOpts, role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.GrantRole(&_Redeemprotocolfactory.TransactOpts, role, account)
}

// PauseReverse is a paid mutator transaction binding the contract method 0x79cebc56.
//
// Solidity: function pauseReverse(address _reverse) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) PauseReverse(opts *bind.TransactOpts, _reverse common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "pauseReverse", _reverse)
}

// PauseReverse is a paid mutator transaction binding the contract method 0x79cebc56.
//
// Solidity: function pauseReverse(address _reverse) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) PauseReverse(_reverse common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.PauseReverse(&_Redeemprotocolfactory.TransactOpts, _reverse)
}

// PauseReverse is a paid mutator transaction binding the contract method 0x79cebc56.
//
// Solidity: function pauseReverse(address _reverse) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) PauseReverse(_reverse common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.PauseReverse(&_Redeemprotocolfactory.TransactOpts, _reverse)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) RenounceRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "renounceRole", role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.RenounceRole(&_Redeemprotocolfactory.TransactOpts, role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.RenounceRole(&_Redeemprotocolfactory.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) RevokeRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "revokeRole", role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.RevokeRole(&_Redeemprotocolfactory.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.RevokeRole(&_Redeemprotocolfactory.TransactOpts, role, account)
}

// SetBaseRedeemFee is a paid mutator transaction binding the contract method 0x4aaed0a9.
//
// Solidity: function setBaseRedeemFee(address _reverse, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) SetBaseRedeemFee(opts *bind.TransactOpts, _reverse common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "setBaseRedeemFee", _reverse, _amount, _token)
}

// SetBaseRedeemFee is a paid mutator transaction binding the contract method 0x4aaed0a9.
//
// Solidity: function setBaseRedeemFee(address _reverse, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) SetBaseRedeemFee(_reverse common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetBaseRedeemFee(&_Redeemprotocolfactory.TransactOpts, _reverse, _amount, _token)
}

// SetBaseRedeemFee is a paid mutator transaction binding the contract method 0x4aaed0a9.
//
// Solidity: function setBaseRedeemFee(address _reverse, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) SetBaseRedeemFee(_reverse common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetBaseRedeemFee(&_Redeemprotocolfactory.TransactOpts, _reverse, _amount, _token)
}

// SetDefaultBaseRedeemFee is a paid mutator transaction binding the contract method 0xaac935dd.
//
// Solidity: function setDefaultBaseRedeemFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) SetDefaultBaseRedeemFee(opts *bind.TransactOpts, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "setDefaultBaseRedeemFee", _amount, _token)
}

// SetDefaultBaseRedeemFee is a paid mutator transaction binding the contract method 0xaac935dd.
//
// Solidity: function setDefaultBaseRedeemFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) SetDefaultBaseRedeemFee(_amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetDefaultBaseRedeemFee(&_Redeemprotocolfactory.TransactOpts, _amount, _token)
}

// SetDefaultBaseRedeemFee is a paid mutator transaction binding the contract method 0xaac935dd.
//
// Solidity: function setDefaultBaseRedeemFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) SetDefaultBaseRedeemFee(_amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetDefaultBaseRedeemFee(&_Redeemprotocolfactory.TransactOpts, _amount, _token)
}

// SetDefaultSetupFee is a paid mutator transaction binding the contract method 0x1caebd84.
//
// Solidity: function setDefaultSetupFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) SetDefaultSetupFee(opts *bind.TransactOpts, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "setDefaultSetupFee", _amount, _token)
}

// SetDefaultSetupFee is a paid mutator transaction binding the contract method 0x1caebd84.
//
// Solidity: function setDefaultSetupFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) SetDefaultSetupFee(_amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetDefaultSetupFee(&_Redeemprotocolfactory.TransactOpts, _amount, _token)
}

// SetDefaultSetupFee is a paid mutator transaction binding the contract method 0x1caebd84.
//
// Solidity: function setDefaultSetupFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) SetDefaultSetupFee(_amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetDefaultSetupFee(&_Redeemprotocolfactory.TransactOpts, _amount, _token)
}

// SetDefaultUpdateFee is a paid mutator transaction binding the contract method 0xfb480cc6.
//
// Solidity: function setDefaultUpdateFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) SetDefaultUpdateFee(opts *bind.TransactOpts, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "setDefaultUpdateFee", _amount, _token)
}

// SetDefaultUpdateFee is a paid mutator transaction binding the contract method 0xfb480cc6.
//
// Solidity: function setDefaultUpdateFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) SetDefaultUpdateFee(_amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetDefaultUpdateFee(&_Redeemprotocolfactory.TransactOpts, _amount, _token)
}

// SetDefaultUpdateFee is a paid mutator transaction binding the contract method 0xfb480cc6.
//
// Solidity: function setDefaultUpdateFee(uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) SetDefaultUpdateFee(_amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetDefaultUpdateFee(&_Redeemprotocolfactory.TransactOpts, _amount, _token)
}

// SetDesignateBaseRedeemFee is a paid mutator transaction binding the contract method 0x853370d5.
//
// Solidity: function setDesignateBaseRedeemFee(address _account, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) SetDesignateBaseRedeemFee(opts *bind.TransactOpts, _account common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "setDesignateBaseRedeemFee", _account, _amount, _token)
}

// SetDesignateBaseRedeemFee is a paid mutator transaction binding the contract method 0x853370d5.
//
// Solidity: function setDesignateBaseRedeemFee(address _account, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) SetDesignateBaseRedeemFee(_account common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetDesignateBaseRedeemFee(&_Redeemprotocolfactory.TransactOpts, _account, _amount, _token)
}

// SetDesignateBaseRedeemFee is a paid mutator transaction binding the contract method 0x853370d5.
//
// Solidity: function setDesignateBaseRedeemFee(address _account, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) SetDesignateBaseRedeemFee(_account common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetDesignateBaseRedeemFee(&_Redeemprotocolfactory.TransactOpts, _account, _amount, _token)
}

// SetDesignateSetupFee is a paid mutator transaction binding the contract method 0x670ee4e1.
//
// Solidity: function setDesignateSetupFee(address _account, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) SetDesignateSetupFee(opts *bind.TransactOpts, _account common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "setDesignateSetupFee", _account, _amount, _token)
}

// SetDesignateSetupFee is a paid mutator transaction binding the contract method 0x670ee4e1.
//
// Solidity: function setDesignateSetupFee(address _account, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) SetDesignateSetupFee(_account common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetDesignateSetupFee(&_Redeemprotocolfactory.TransactOpts, _account, _amount, _token)
}

// SetDesignateSetupFee is a paid mutator transaction binding the contract method 0x670ee4e1.
//
// Solidity: function setDesignateSetupFee(address _account, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) SetDesignateSetupFee(_account common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetDesignateSetupFee(&_Redeemprotocolfactory.TransactOpts, _account, _amount, _token)
}

// SetDesignateUpdateFee is a paid mutator transaction binding the contract method 0x93942ab8.
//
// Solidity: function setDesignateUpdateFee(address _account, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) SetDesignateUpdateFee(opts *bind.TransactOpts, _account common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "setDesignateUpdateFee", _account, _amount, _token)
}

// SetDesignateUpdateFee is a paid mutator transaction binding the contract method 0x93942ab8.
//
// Solidity: function setDesignateUpdateFee(address _account, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) SetDesignateUpdateFee(_account common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetDesignateUpdateFee(&_Redeemprotocolfactory.TransactOpts, _account, _amount, _token)
}

// SetDesignateUpdateFee is a paid mutator transaction binding the contract method 0x93942ab8.
//
// Solidity: function setDesignateUpdateFee(address _account, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) SetDesignateUpdateFee(_account common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetDesignateUpdateFee(&_Redeemprotocolfactory.TransactOpts, _account, _amount, _token)
}

// SetFeeReceiver is a paid mutator transaction binding the contract method 0xefdcd974.
//
// Solidity: function setFeeReceiver(address _feeReceiver) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) SetFeeReceiver(opts *bind.TransactOpts, _feeReceiver common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "setFeeReceiver", _feeReceiver)
}

// SetFeeReceiver is a paid mutator transaction binding the contract method 0xefdcd974.
//
// Solidity: function setFeeReceiver(address _feeReceiver) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) SetFeeReceiver(_feeReceiver common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetFeeReceiver(&_Redeemprotocolfactory.TransactOpts, _feeReceiver)
}

// SetFeeReceiver is a paid mutator transaction binding the contract method 0xefdcd974.
//
// Solidity: function setFeeReceiver(address _feeReceiver) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) SetFeeReceiver(_feeReceiver common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetFeeReceiver(&_Redeemprotocolfactory.TransactOpts, _feeReceiver)
}

// SetRedeemAmount is a paid mutator transaction binding the contract method 0x71a6f238.
//
// Solidity: function setRedeemAmount(address _reverse, uint256 _amount) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) SetRedeemAmount(opts *bind.TransactOpts, _reverse common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "setRedeemAmount", _reverse, _amount)
}

// SetRedeemAmount is a paid mutator transaction binding the contract method 0x71a6f238.
//
// Solidity: function setRedeemAmount(address _reverse, uint256 _amount) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) SetRedeemAmount(_reverse common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetRedeemAmount(&_Redeemprotocolfactory.TransactOpts, _reverse, _amount)
}

// SetRedeemAmount is a paid mutator transaction binding the contract method 0x71a6f238.
//
// Solidity: function setRedeemAmount(address _reverse, uint256 _amount) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) SetRedeemAmount(_reverse common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetRedeemAmount(&_Redeemprotocolfactory.TransactOpts, _reverse, _amount)
}

// SetUpdateFee is a paid mutator transaction binding the contract method 0xe157becf.
//
// Solidity: function setUpdateFee(address _reverse, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) SetUpdateFee(opts *bind.TransactOpts, _reverse common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "setUpdateFee", _reverse, _amount, _token)
}

// SetUpdateFee is a paid mutator transaction binding the contract method 0xe157becf.
//
// Solidity: function setUpdateFee(address _reverse, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) SetUpdateFee(_reverse common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetUpdateFee(&_Redeemprotocolfactory.TransactOpts, _reverse, _amount, _token)
}

// SetUpdateFee is a paid mutator transaction binding the contract method 0xe157becf.
//
// Solidity: function setUpdateFee(address _reverse, uint256 _amount, address _token) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) SetUpdateFee(_reverse common.Address, _amount *big.Int, _token common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.SetUpdateFee(&_Redeemprotocolfactory.TransactOpts, _reverse, _amount, _token)
}

// Withdraw is a paid mutator transaction binding the contract method 0x69328dec.
//
// Solidity: function withdraw(address _token, uint256 _amount, address _receiver) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactor) Withdraw(opts *bind.TransactOpts, _token common.Address, _amount *big.Int, _receiver common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.contract.Transact(opts, "withdraw", _token, _amount, _receiver)
}

// Withdraw is a paid mutator transaction binding the contract method 0x69328dec.
//
// Solidity: function withdraw(address _token, uint256 _amount, address _receiver) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactorySession) Withdraw(_token common.Address, _amount *big.Int, _receiver common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.Withdraw(&_Redeemprotocolfactory.TransactOpts, _token, _amount, _receiver)
}

// Withdraw is a paid mutator transaction binding the contract method 0x69328dec.
//
// Solidity: function withdraw(address _token, uint256 _amount, address _receiver) returns()
func (_Redeemprotocolfactory *RedeemprotocolfactoryTransactorSession) Withdraw(_token common.Address, _amount *big.Int, _receiver common.Address) (*types.Transaction, error) {
	return _Redeemprotocolfactory.Contract.Withdraw(&_Redeemprotocolfactory.TransactOpts, _token, _amount, _receiver)
}

// RedeemprotocolfactoryReverseCreatedIterator is returned from FilterReverseCreated and is used to iterate over the raw logs and unpacked data for ReverseCreated events raised by the Redeemprotocolfactory contract.
type RedeemprotocolfactoryReverseCreatedIterator struct {
	Event *RedeemprotocolfactoryReverseCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RedeemprotocolfactoryReverseCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RedeemprotocolfactoryReverseCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RedeemprotocolfactoryReverseCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RedeemprotocolfactoryReverseCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RedeemprotocolfactoryReverseCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RedeemprotocolfactoryReverseCreated represents a ReverseCreated event raised by the Redeemprotocolfactory contract.
type RedeemprotocolfactoryReverseCreated struct {
	Creator common.Address
	Reverse common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterReverseCreated is a free log retrieval operation binding the contract event 0xf4951aefe551b8c9844809ed0522581563561691afa773f7977e1753746f4350.
//
// Solidity: event ReverseCreated(address indexed creator, address reverse)
func (_Redeemprotocolfactory *RedeemprotocolfactoryFilterer) FilterReverseCreated(opts *bind.FilterOpts, creator []common.Address) (*RedeemprotocolfactoryReverseCreatedIterator, error) {

	var creatorRule []interface{}
	for _, creatorItem := range creator {
		creatorRule = append(creatorRule, creatorItem)
	}

	logs, sub, err := _Redeemprotocolfactory.contract.FilterLogs(opts, "ReverseCreated", creatorRule)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolfactoryReverseCreatedIterator{contract: _Redeemprotocolfactory.contract, event: "ReverseCreated", logs: logs, sub: sub}, nil
}

// WatchReverseCreated is a free log subscription operation binding the contract event 0xf4951aefe551b8c9844809ed0522581563561691afa773f7977e1753746f4350.
//
// Solidity: event ReverseCreated(address indexed creator, address reverse)
func (_Redeemprotocolfactory *RedeemprotocolfactoryFilterer) WatchReverseCreated(opts *bind.WatchOpts, sink chan<- *RedeemprotocolfactoryReverseCreated, creator []common.Address) (event.Subscription, error) {

	var creatorRule []interface{}
	for _, creatorItem := range creator {
		creatorRule = append(creatorRule, creatorItem)
	}

	logs, sub, err := _Redeemprotocolfactory.contract.WatchLogs(opts, "ReverseCreated", creatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RedeemprotocolfactoryReverseCreated)
				if err := _Redeemprotocolfactory.contract.UnpackLog(event, "ReverseCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseReverseCreated is a log parse operation binding the contract event 0xf4951aefe551b8c9844809ed0522581563561691afa773f7977e1753746f4350.
//
// Solidity: event ReverseCreated(address indexed creator, address reverse)
func (_Redeemprotocolfactory *RedeemprotocolfactoryFilterer) ParseReverseCreated(log types.Log) (*RedeemprotocolfactoryReverseCreated, error) {
	event := new(RedeemprotocolfactoryReverseCreated)
	if err := _Redeemprotocolfactory.contract.UnpackLog(event, "ReverseCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// RedeemprotocolfactoryRoleAdminChangedIterator is returned from FilterRoleAdminChanged and is used to iterate over the raw logs and unpacked data for RoleAdminChanged events raised by the Redeemprotocolfactory contract.
type RedeemprotocolfactoryRoleAdminChangedIterator struct {
	Event *RedeemprotocolfactoryRoleAdminChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RedeemprotocolfactoryRoleAdminChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RedeemprotocolfactoryRoleAdminChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RedeemprotocolfactoryRoleAdminChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RedeemprotocolfactoryRoleAdminChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RedeemprotocolfactoryRoleAdminChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RedeemprotocolfactoryRoleAdminChanged represents a RoleAdminChanged event raised by the Redeemprotocolfactory contract.
type RedeemprotocolfactoryRoleAdminChanged struct {
	Role              [32]byte
	PreviousAdminRole [32]byte
	NewAdminRole      [32]byte
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterRoleAdminChanged is a free log retrieval operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_Redeemprotocolfactory *RedeemprotocolfactoryFilterer) FilterRoleAdminChanged(opts *bind.FilterOpts, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (*RedeemprotocolfactoryRoleAdminChangedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _Redeemprotocolfactory.contract.FilterLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolfactoryRoleAdminChangedIterator{contract: _Redeemprotocolfactory.contract, event: "RoleAdminChanged", logs: logs, sub: sub}, nil
}

// WatchRoleAdminChanged is a free log subscription operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_Redeemprotocolfactory *RedeemprotocolfactoryFilterer) WatchRoleAdminChanged(opts *bind.WatchOpts, sink chan<- *RedeemprotocolfactoryRoleAdminChanged, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _Redeemprotocolfactory.contract.WatchLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RedeemprotocolfactoryRoleAdminChanged)
				if err := _Redeemprotocolfactory.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleAdminChanged is a log parse operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_Redeemprotocolfactory *RedeemprotocolfactoryFilterer) ParseRoleAdminChanged(log types.Log) (*RedeemprotocolfactoryRoleAdminChanged, error) {
	event := new(RedeemprotocolfactoryRoleAdminChanged)
	if err := _Redeemprotocolfactory.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// RedeemprotocolfactoryRoleGrantedIterator is returned from FilterRoleGranted and is used to iterate over the raw logs and unpacked data for RoleGranted events raised by the Redeemprotocolfactory contract.
type RedeemprotocolfactoryRoleGrantedIterator struct {
	Event *RedeemprotocolfactoryRoleGranted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RedeemprotocolfactoryRoleGrantedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RedeemprotocolfactoryRoleGranted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RedeemprotocolfactoryRoleGranted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RedeemprotocolfactoryRoleGrantedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RedeemprotocolfactoryRoleGrantedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RedeemprotocolfactoryRoleGranted represents a RoleGranted event raised by the Redeemprotocolfactory contract.
type RedeemprotocolfactoryRoleGranted struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleGranted is a free log retrieval operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_Redeemprotocolfactory *RedeemprotocolfactoryFilterer) FilterRoleGranted(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*RedeemprotocolfactoryRoleGrantedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Redeemprotocolfactory.contract.FilterLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolfactoryRoleGrantedIterator{contract: _Redeemprotocolfactory.contract, event: "RoleGranted", logs: logs, sub: sub}, nil
}

// WatchRoleGranted is a free log subscription operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_Redeemprotocolfactory *RedeemprotocolfactoryFilterer) WatchRoleGranted(opts *bind.WatchOpts, sink chan<- *RedeemprotocolfactoryRoleGranted, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Redeemprotocolfactory.contract.WatchLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RedeemprotocolfactoryRoleGranted)
				if err := _Redeemprotocolfactory.contract.UnpackLog(event, "RoleGranted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleGranted is a log parse operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_Redeemprotocolfactory *RedeemprotocolfactoryFilterer) ParseRoleGranted(log types.Log) (*RedeemprotocolfactoryRoleGranted, error) {
	event := new(RedeemprotocolfactoryRoleGranted)
	if err := _Redeemprotocolfactory.contract.UnpackLog(event, "RoleGranted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// RedeemprotocolfactoryRoleRevokedIterator is returned from FilterRoleRevoked and is used to iterate over the raw logs and unpacked data for RoleRevoked events raised by the Redeemprotocolfactory contract.
type RedeemprotocolfactoryRoleRevokedIterator struct {
	Event *RedeemprotocolfactoryRoleRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RedeemprotocolfactoryRoleRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RedeemprotocolfactoryRoleRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RedeemprotocolfactoryRoleRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RedeemprotocolfactoryRoleRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RedeemprotocolfactoryRoleRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RedeemprotocolfactoryRoleRevoked represents a RoleRevoked event raised by the Redeemprotocolfactory contract.
type RedeemprotocolfactoryRoleRevoked struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleRevoked is a free log retrieval operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_Redeemprotocolfactory *RedeemprotocolfactoryFilterer) FilterRoleRevoked(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*RedeemprotocolfactoryRoleRevokedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Redeemprotocolfactory.contract.FilterLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &RedeemprotocolfactoryRoleRevokedIterator{contract: _Redeemprotocolfactory.contract, event: "RoleRevoked", logs: logs, sub: sub}, nil
}

// WatchRoleRevoked is a free log subscription operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_Redeemprotocolfactory *RedeemprotocolfactoryFilterer) WatchRoleRevoked(opts *bind.WatchOpts, sink chan<- *RedeemprotocolfactoryRoleRevoked, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Redeemprotocolfactory.contract.WatchLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RedeemprotocolfactoryRoleRevoked)
				if err := _Redeemprotocolfactory.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleRevoked is a log parse operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_Redeemprotocolfactory *RedeemprotocolfactoryFilterer) ParseRoleRevoked(log types.Log) (*RedeemprotocolfactoryRoleRevoked, error) {
	event := new(RedeemprotocolfactoryRoleRevoked)
	if err := _Redeemprotocolfactory.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
